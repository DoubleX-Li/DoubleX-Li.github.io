<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Linux磁盘空间耗尽的诡异问题</title>
      <link href="/2018/05/09/Linux%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E8%80%97%E5%B0%BD%E7%9A%84%E8%AF%A1%E5%BC%82%E9%97%AE%E9%A2%98/"/>
      <url>/2018/05/09/Linux%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E8%80%97%E5%B0%BD%E7%9A%84%E8%AF%A1%E5%BC%82%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="Linux-磁盘空间耗尽的诡异问题"><a href="#Linux-磁盘空间耗尽的诡异问题" class="headerlink" title="Linux 磁盘空间耗尽的诡异问题"></a>Linux 磁盘空间耗尽的诡异问题</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>服务器上有许多python脚本在不停的生成日志文件，其中一部分使用了logging模块的rotatedfilehandler，自动轮转删除15日以上的日志。另外一部分使用多进程的程序暂时没有配置，仍用nohup重定向输出到磁盘文件的方式。对于这一部分程序生成的.out日志，有一个单独的脚本每日删除。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>我发现服务器上莫名其妙的少了近90G的空间，查来查去发现是因为.out文件对应的程序没有停止，相关的文件句柄没有释放，导致linux内核回收不了这一部分空间。<br>使用以下命令可以看到被删除了但是句柄没有释放的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -n | grep deleted</span><br></pre></td></tr></table></figure><p>将对应的程序杀掉就释放了被占用的空间。</p>]]></content>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>filter vs list comprehension vs for loop</title>
      <link href="/2018/04/13/filter-vs-list-comprehension-vs-for-loop/"/>
      <url>/2018/04/13/filter-vs-list-comprehension-vs-for-loop/</url>
      <content type="html"><![CDATA[<h1 id="比较filter函数和列表推导式效率"><a href="#比较filter函数和列表推导式效率" class="headerlink" title="比较filter函数和列表推导式效率"></a>比较filter函数和列表推导式效率</h1><p>好奇filter函数和列表推导式哪种更快</p><h2 id="使用timeit"><a href="#使用timeit" class="headerlink" title="使用timeit"></a>使用timeit</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line"></span><br><span class="line">nums = list(range(<span class="number">10000</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_odd</span><span class="params">(value)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> value % <span class="number">2</span> == <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_filter</span><span class="params">()</span>:</span></span><br><span class="line">    result = list(filter(is_odd, nums))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_list_comprehension</span><span class="params">()</span>:</span></span><br><span class="line">    result = [num <span class="keyword">for</span> num <span class="keyword">in</span> nums <span class="keyword">if</span> is_odd(num)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_forloop</span><span class="params">()</span>:</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">        <span class="keyword">if</span> is_odd(num):</span><br><span class="line">            result.append(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">10</span>, <span class="number">100</span>, <span class="number">1000</span>, <span class="number">10000</span>]:</span><br><span class="line">        print(<span class="string">f'i = <span class="subst">&#123;i&#125;</span>'</span>)</span><br><span class="line">        print(timeit.repeat(<span class="string">"use_filter()"</span>, setup=<span class="string">"from __main__ import use_filter"</span>, repeat=<span class="number">5</span>, number=i))</span><br><span class="line">        print(timeit.repeat(<span class="string">"use_list_comprehension()"</span>, setup=<span class="string">"from __main__ import use_list_comprehension"</span>, repeat=<span class="number">5</span>,</span><br><span class="line">                            number=i))</span><br><span class="line">        print(timeit.repeat(<span class="string">"use_forloop()"</span>, setup=<span class="string">"from __main__ import use_forloop"</span>, repeat=<span class="number">5</span>, number=i))</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">i = 10</span><br><span class="line">[0.009981556529392921, 0.01118395884586795, 0.010409208672474444, 0.00989167182441069, 0.010731736143293015]</span><br><span class="line">[0.01227781527293538, 0.01167132677911066, 0.012889591102347275, 0.011987633855120791, 0.012602208862196485]</span><br><span class="line">[0.015128000174171041, 0.015430000342121719, 0.015144173200673045, 0.015289108399710122, 0.015036871390227136]</span><br><span class="line">i = 100</span><br><span class="line">[0.10597655533196693, 0.1038532235640996, 0.1065852209639746, 0.10463263903359943, 0.10483293574643182]</span><br><span class="line">[0.12412860044227014, 0.12568121098646123, 0.12591976312736564, 0.12167465469033334, 0.12343502642112703]</span><br><span class="line">[0.15269358646193276, 0.1535697290707041, 0.1513428277292761, 0.1535998979855253, 0.1519990793815682]</span><br><span class="line">i = 1000</span><br><span class="line">[1.0562684473583537, 1.056365796537106, 1.054425655396348, 1.057423574674285, 1.0545009221735304]</span><br><span class="line">[1.2489361569778836, 1.2586884919585835, 1.2246461372903337, 1.2813008711662928, 1.2368527290427114]</span><br><span class="line">[1.5348320337891845, 1.5393803864731286, 1.5281827427586805, 1.5293807907987933, 1.5362711221281202]</span><br><span class="line">i = 10000</span><br><span class="line">[10.563701819154463, 10.706948492020786, 10.6040463668229, 10.637917349614185, 10.590753694136964]</span><br><span class="line">[12.483121269706999, 12.631777197898757, 12.308776666054996, 12.286822093598275, 12.31480267352569]</span><br><span class="line">[15.263468554349146, 15.329303657903182, 15.277603779511878, 15.250327659296516, 15.312874662154798]</span><br></pre></td></tr></table></figure><p>由以上结果，显然filter函数最快😄，列表推导式其次😐，for循环最慢☹️</p><p>参考：<a href="https://stackoverflow.com/questions/22108488/are-list-comprehensions-and-functional-functions-faster-than-for-loops" target="_blank" rel="noopener">stackoverflow</a></p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用pyenv管理python版本</title>
      <link href="/2017/10/12/%E4%BD%BF%E7%94%A8pyenv%E7%AE%A1%E7%90%86python%E7%89%88%E6%9C%AC/"/>
      <url>/2017/10/12/%E4%BD%BF%E7%94%A8pyenv%E7%AE%A1%E7%90%86python%E7%89%88%E6%9C%AC/</url>
      <content type="html"><![CDATA[<h1 id="使用pyenv管理python版本"><a href="#使用pyenv管理python版本" class="headerlink" title="使用pyenv管理python版本"></a>使用pyenv管理python版本</h1><h2 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev</span><br></pre></td></tr></table></figure><h2 id="自动安装"><a href="#自动安装" class="headerlink" title="自动安装"></a>自动安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash</span><br></pre></td></tr></table></figure><h2 id="安装后操作"><a href="#安装后操作" class="headerlink" title="安装后操作"></a>安装后操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Load pyenv automatically by adding</span></span><br><span class="line"><span class="comment"># the following to ~/.bash_profile:</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/home/&lt;username&gt;/.pyenv/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="查看已安装python版本"><a href="#查看已安装python版本" class="headerlink" title="查看已安装python版本"></a>查看已安装python版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pyenv versions</span><br></pre></td></tr></table></figure><h3 id="查看可安装python版本"><a href="#查看可安装python版本" class="headerlink" title="查看可安装python版本"></a>查看可安装python版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pyenv install -l</span><br></pre></td></tr></table></figure><h3 id="python安装与卸载"><a href="#python安装与卸载" class="headerlink" title="python安装与卸载"></a>python安装与卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pyenv install 3.6.3</span><br><span class="line">pyenv uninstall 3.6.3</span><br></pre></td></tr></table></figure><h3 id="python版本切换"><a href="#python版本切换" class="headerlink" title="python版本切换"></a>python版本切换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pyenv global 3.6.3</span><br><span class="line">pyenv <span class="built_in">local</span> 3.6.3</span><br></pre></td></tr></table></figure><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><h3 id="pyenv-virtualenv"><a href="#pyenv-virtualenv" class="headerlink" title="pyenv-virtualenv"></a>pyenv-virtualenv</h3><p>自动安装pyenv后，会自动安装部分插件。</p><p>pyenv-virtualenv能很好的将pyenv和virtualenv结合。</p><h4 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pyenv virtualenv 3.7.3 env-3.7.3</span><br></pre></td></tr></table></figure><h4 id="查看当前已安装虚拟环境"><a href="#查看当前已安装虚拟环境" class="headerlink" title="查看当前已安装虚拟环境"></a>查看当前已安装虚拟环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pyenv virtualenvs</span><br></pre></td></tr></table></figure><h4 id="切换到虚拟环境"><a href="#切换到虚拟环境" class="headerlink" title="切换到虚拟环境"></a>切换到虚拟环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pyenv activate env-3.6.3</span><br><span class="line">pyenv deactivate</span><br></pre></td></tr></table></figure><h4 id="删除虚拟环境"><a href="#删除虚拟环境" class="headerlink" title="删除虚拟环境"></a>删除虚拟环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pyenv uninstall env-3.6.3</span><br></pre></td></tr></table></figure><p>或者直接删除其目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rm -rf ~/.pyenv/versions/env-3.6.3</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用ssh连接virtualbox中的Ubuntu</title>
      <link href="/2017/04/24/%E4%BD%BF%E7%94%A8ssh%E8%BF%9E%E6%8E%A5virtualbox%E4%B8%AD%E7%9A%84Ubuntu/"/>
      <url>/2017/04/24/%E4%BD%BF%E7%94%A8ssh%E8%BF%9E%E6%8E%A5virtualbox%E4%B8%AD%E7%9A%84Ubuntu/</url>
      <content type="html"><![CDATA[<p>运行虚拟机时，有时不需要图形界面。</p><a id="more"></a><h1 id="Ubuntu中安装ssh"><a href="#Ubuntu中安装ssh" class="headerlink" title="Ubuntu中安装ssh"></a>Ubuntu中安装ssh</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openssh-server</span><br></pre></td></tr></table></figure><h1 id="将VBoxManage加入环境变量"><a href="#将VBoxManage加入环境变量" class="headerlink" title="将VBoxManage加入环境变量"></a>将VBoxManage加入环境变量</h1><p>找到<code>VBoxManage.exe</code>的路径</p><p><img src="https://ooo.0o0.ooo/2017/04/24/58fcd90fe4ee3.png" alt="1.png"></p><p>添加到<code>Path</code>中</p><p><img src="https://ooo.0o0.ooo/2017/04/24/58fcd90fe886a.png" alt="2.png"></p><h1 id="无界面启动虚拟机"><a href="#无界面启动虚拟机" class="headerlink" title="无界面启动虚拟机"></a>无界面启动虚拟机</h1><p>使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe startvm Ubuntu -<span class="built_in">type</span> headless</span><br></pre></td></tr></table></figure><p>启动虚拟机</p><p><img src="https://ooo.0o0.ooo/2017/04/24/58fcd9103700f.png" alt="3.png"></p><h1 id="使用ssh连接"><a href="#使用ssh连接" class="headerlink" title="使用ssh连接"></a>使用ssh连接</h1><p>使用ssh客户端，如xshell，连接Ubuntu</p><p><img src="https://ooo.0o0.ooo/2017/04/24/58fcda3f46e40.png" alt="4.png"></p><h1 id="附：VBoxManage常用命令"><a href="#附：VBoxManage常用命令" class="headerlink" title="附：VBoxManage常用命令"></a>附：VBoxManage常用命令</h1><p>查看有哪些虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe list vms</span><br></pre></td></tr></table></figure><p>查看虚拟机的详细信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe list vms --long</span><br></pre></td></tr></table></figure><p>查看运行着的虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe list runningvms</span><br></pre></td></tr></table></figure><p>开启虚拟机在后台运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe startvm &lt;vm_name&gt; -<span class="built_in">type</span> headless</span><br></pre></td></tr></table></figure><p>开启虚拟机并开启远程桌面连接的支持</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe startvm &lt;vm_name&gt; -<span class="built_in">type</span> vrdp</span><br></pre></td></tr></table></figure><p>改变虚拟机的远程连接端口，用于多个虚拟机同时运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe controlvm &lt;vm_name&gt; vrdpprot &lt;ports&gt;</span><br></pre></td></tr></table></figure><p>关闭虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe controlvm &lt;vm_name&gt; acpipowerbutton</span><br></pre></td></tr></table></figure><p>强制关闭虚拟机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe controlvm &lt;vm_name&gt; poweroff</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> virtualbox </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>git——从历史记录中删除文件</title>
      <link href="/2017/03/18/git%E2%80%94%E2%80%94%E4%BB%8E%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%B8%AD%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6/"/>
      <url>/2017/03/18/git%E2%80%94%E2%80%94%E4%BB%8E%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%B8%AD%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>写项目的时候不小心把账号密码等信息提交到github上了。</p><p>直接删除文件是不够的，还需要从git历史中删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --force --index-filter <span class="string">'git rm --cached --ignore-unmatch path_to_your_file'</span> --prune-empty --tag-name-filter cat -- --all</span><br><span class="line">git push origin master --force</span><br></pre></td></tr></table></figure><p>删除文件后再以强制覆盖的方式向github推送repo就可以解决问题。</p>]]></content>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>一个微博粉丝信息爬虫</title>
      <link href="/2017/03/14/%E4%B8%80%E4%B8%AA%E5%BE%AE%E5%8D%9A%E7%B2%89%E4%B8%9D%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB/"/>
      <url>/2017/03/14/%E4%B8%80%E4%B8%AA%E5%BE%AE%E5%8D%9A%E7%B2%89%E4%B8%9D%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB/</url>
      <content type="html"><![CDATA[<p>记录一次微博粉丝信息爬取。</p><p>项目地址：<a href="https://github.com/DoubleX-Li/weibo.git" target="_blank" rel="noopener">https://github.com/DoubleX-Li/weibo.git</a></p><a id="more"></a><h1 id="失败的尝试"><a href="#失败的尝试" class="headerlink" title="失败的尝试"></a>失败的尝试</h1><p>秉承先尝试手机端页面的原则，我选择了<a href="http://weibo.cn/" target="_blank" rel="noopener">weibo.cn</a>。</p><h2 id="找到粉丝页面"><a href="#找到粉丝页面" class="headerlink" title="找到粉丝页面"></a>找到粉丝页面</h2><p>接下来是要找到粉丝页面，以<a href="http://weibo.cn/1788911247" target="_blank" rel="noopener">谷大白话</a>为例。</p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7ca88482cd.png" alt="1.png"></p><p>可以看到<a href="http://weibo.cn/1788911247/fans" target="_blank" rel="noopener">粉丝页面</a>很明显地放在页面上。</p><h2 id="解析页面结构"><a href="#解析页面结构" class="headerlink" title="解析页面结构"></a>解析页面结构</h2><p>在Developer Tools里面可以看到返回了一个简单的网页。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"c"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">"top"</span> <span class="attr">style</span>=<span class="string">"width: 52px"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://weibo.cn/u/1764360474"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://tva3.sinaimg.cn/crop.0.6.750.750.50/692a011ajw8fdcde1yo4gj20ku0l63zf.jpg"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">alt</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">"top"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://weibo.cn/u/1764360474"</span>&gt;</span></span><br><span class="line">                    谭阿倩</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">                粉丝254人</span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://weibo.cn/attention/add?uid=1764360474&amp;amp;rl=1&amp;amp;st=4561d5"</span>&gt;</span></span><br><span class="line">                    关注她</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"s"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 更多的table --&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"c"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://weibo.cn/attention/batchadd?st=4561d5"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"rl"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"f"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"uidList"</span> <span class="attr">value</span>=<span class="string">"1764360474,6131087160,1644778123,5792666099,2608149357,1678455724,2200798573,1886160672,5856282793,2717084785"</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"关注以上这些人"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"s"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pa"</span> <span class="attr">id</span>=<span class="string">"pagelist"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/1788911247/fans"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1788911247/fans?page=3"</span>&gt;</span></span><br><span class="line">                    下页</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1788911247/fans?page=1"</span>&gt;</span></span><br><span class="line">                    上页</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1788911247/fans"</span>&gt;</span></span><br><span class="line">                    首页</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                &amp;nbsp;</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"mp"</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"20"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"page"</span> <span class="attr">size</span>=<span class="string">"2"</span> <span class="attr">style</span>=<span class="string">'-wap-input-format: "*N"'</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"跳页"</span> /&gt;</span></span><br><span class="line">                &amp;nbsp;2/20页</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>网页的部分源码如上所示，分析网页源码可知：</p><ol><li>粉丝信息在每个table标签的tr标签的第二个td标签中；</li><li>下一页链接在id为pagelist的div下的form标签下的div标签下的第一个a标签中。</li></ol><p>由以上信息可以很容易地写出解析粉丝信息的程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_followers</span><span class="params">(self, response)</span>:</span></span><br><span class="line">fans = response.xpath(<span class="string">'//table/tbody/tr/td[2]/a[1]'</span>)</span><br><span class="line"><span class="keyword">for</span> fan <span class="keyword">in</span> fans:</span><br><span class="line">print(fan.xpath(<span class="string">'/text()'</span>)[<span class="number">0</span>].extract())</span><br><span class="line">print(fan.xpath(<span class="string">'/@href'</span>)[<span class="number">0</span>].extract())</span><br><span class="line"></span><br><span class="line">next_page = response.xpath(<span class="string">'//div[@id="pagelist"]/form/div/a/@href'</span>)[<span class="number">0</span>].extract()</span><br><span class="line"><span class="keyword">yield</span> Request(</span><br><span class="line">url=<span class="string">'http://weibo.cn/1788911247/fans?&#123;0&#125;'</span>.format(next_page),</span><br><span class="line">headers=self.cn_headers,</span><br><span class="line">callback=self.parse_followers</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h2><p>weibo.cn的<a href="https://login.weibo.cn/?" target="_blank" rel="noopener">登录页面</a>如下图所示：</p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7d41c8e507.png" alt="2.png"></p><p>登录页面的部分源码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"?rand=1242851600&amp;amp;backURL=http%3A%2F%2Fweibo.cn&amp;amp;backTitle=%E6%89%8B%E6%9C%BA%E6%96%B0%E6%B5%AA%E7%BD%91&amp;amp;vt=4"</span></span></span><br><span class="line"><span class="tag"><span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        手机号/电子邮箱/会员帐号:</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"mobile"</span> <span class="attr">size</span>=<span class="string">"30"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        密码:(</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/login/?backURL=http%3A%2F%2Fweibo.cn&amp;amp;backTitle=%E6%89%8B%E6%9C%BA%E6%96%B0%E6%B5%AA%E7%BD%91&amp;amp;vt=4&amp;amp;pt=1"</span>&gt;</span></span><br><span class="line">            使用明文密码</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        )</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password_1133"</span> <span class="attr">size</span>=<span class="string">"30"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        请输入图片中的字符:</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://weibo.cn/interface/f/ttt/captcha/show.php?cpt=2_f78c59f514b82660"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">alt</span>=<span class="string">"请打开图片显示"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"code"</span> <span class="attr">size</span>=<span class="string">"8"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"remember"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> /&gt;</span></span><br><span class="line">        记住登录状态，需支持并打开手机的cookie功能。</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"backURL"</span> <span class="attr">value</span>=<span class="string">"http%3A%2F%2Fweibo.cn"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"backTitle"</span> <span class="attr">value</span>=<span class="string">"手机新浪网"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"tryCount"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"vk"</span> <span class="attr">value</span>=<span class="string">"3255_00c0_1814994306"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"capId"</span> <span class="attr">value</span>=<span class="string">"2_f78c59f514b82660"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span> /&gt;</span></span><br><span class="line">        &amp;nbsp;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://weibo.cn/reg/forgetpwd?backURL=http%3A%2F%2Fweibo.cn&amp;amp;backTitle=%E6%89%8B%E6%9C%BA%E6%96%B0%E6%B5%AA%E7%BD%91&amp;amp;vt=4"</span>&gt;</span></span><br><span class="line">            忘记密码</span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        小提示：</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        1、登录成功后保存任意页面为书签，下次通过书签访问，也可免去登录过程。</span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span></span><br><span class="line">            2、请不要直接通过手机浏览器的发送地址功能将登录后的页面地址发送给朋友，以免泄露个人信息及密码。</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"display:none"</span> <span class="attr">src</span>=<span class="string">"http://218.206.86.254/2008/match/c.gif?f=wap_reg"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>直接点击登录可以在Developer Tools中看到发送post请求时需要传递的参数。</p><p>其中获取验证码的地址如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://weibo.cn/interface/f/ttt/captcha/show.php?cpt=2_f78c59f514b82660</span><br></pre></td></tr></table></figure><p>这个<code>2_f78c59f514b82660</code>在网页源码中的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"capId"</span> <span class="attr">value</span>=<span class="string">"2_f78c59f514b82660"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这一行</p><p>Developer Tools中Form Data的部分如下：</p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7d613ac5d1.png" alt="3.png"></p><p>可以看到需要传递的value有<code>backURL</code>、<code>backTitle</code>、<code>tryCount</code>、<code>vk</code>、<code>capId</code>、<code>submit</code>。</p><p>而且，key部分的<code>password_1133</code>也是从网页源码中的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password_1133"</span> <span class="attr">size</span>=<span class="string">"30"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这一行获得的。</p><p>至此，可以容易地写出模拟登录的程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_params</span><span class="params">(self, response)</span>:</span></span><br><span class="line">    logging.info(<span class="string">'get_params'</span>)</span><br><span class="line">    post_url = response.xpath(<span class="string">'/html/body/div[2]/form/@action'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">    password = response.xpath(<span class="string">'//input[@type="password"]/@name'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">    backURL = response.xpath(<span class="string">'//input[@name="backURL"]/@value'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">    backTitle = response.xpath(<span class="string">'//input[@name="backTitle"]/@value'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">    tryCount = response.xpath(<span class="string">'//input[@name="tryCount"]/@value'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">    vk = response.xpath(<span class="string">'//input[@name="vk"]/@value'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">    capId = response.xpath(<span class="string">'//input[@name="capId"]/@value'</span>)[<span class="number">0</span>].extract()</span><br><span class="line"></span><br><span class="line">    self.params = (post_url, password, backURL, backTitle, tryCount, vk, capId)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">request_captcha</span><span class="params">(self, response)</span>:</span></span><br><span class="line">    logging.info(<span class="string">'request_captcha'</span>)</span><br><span class="line">    self.get_params(response)</span><br><span class="line">    capId = self.params[<span class="number">6</span>]</span><br><span class="line">    <span class="comment"># 获取验证码地址</span></span><br><span class="line">    cha_url = <span class="string">"http://weibo.cn/interface/f/ttt/captcha/show.php?cpt=&#123;0&#125;"</span>.format(capId)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 准备下载验证码</span></span><br><span class="line">    <span class="keyword">yield</span> Request(</span><br><span class="line">        url=cha_url,</span><br><span class="line">        headers=self.cn_headers,</span><br><span class="line">        meta=&#123;</span><br><span class="line">            <span class="string">'cookiejar'</span>: response.meta[<span class="string">'cookiejar'</span>],</span><br><span class="line">        &#125;,</span><br><span class="line">        callback=self.download_captcha</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_captcha</span><span class="params">(self, response)</span>:</span></span><br><span class="line">    logging.info(<span class="string">'download_captcha'</span>)</span><br><span class="line">    <span class="comment"># 下载验证码</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'captcha.gif'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(response.body)</span><br><span class="line">    <span class="comment"># 用软件打开验证码图片</span></span><br><span class="line">    os.system(<span class="string">'start captcha.gif'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 输入验证码</span></span><br><span class="line">    print(<span class="string">'请输入验证码: '</span>)</span><br><span class="line">    captcha = input()</span><br><span class="line"></span><br><span class="line">    post_url, password, backURL, backTitle, tryCount, vk, capId = self.params</span><br><span class="line"></span><br><span class="line">    <span class="keyword">yield</span> FormRequest(</span><br><span class="line">        url=<span class="string">'https://login.weibo.cn/login/&#123;0&#125;'</span>.format(post_url),</span><br><span class="line">        headers=self.headers,</span><br><span class="line">        formdata=&#123;</span><br><span class="line">            <span class="string">'mobile'</span>: <span class="string">'your_telephone_number'</span>,</span><br><span class="line">            password: <span class="string">'your_password'</span>,</span><br><span class="line">            <span class="string">'code'</span>: captcha,</span><br><span class="line">            <span class="string">'remember'</span>: <span class="string">'on'</span>,</span><br><span class="line">            <span class="string">'backURL'</span>: backURL,</span><br><span class="line">            <span class="string">'backTitle'</span>: backTitle,</span><br><span class="line">            <span class="string">'tryCount'</span>: tryCount,</span><br><span class="line">            <span class="string">'vk'</span>: vk,</span><br><span class="line">            <span class="string">'capId'</span>: capId,</span><br><span class="line">            <span class="string">'submit'</span>: <span class="string">'登录'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        meta=&#123;</span><br><span class="line">            <span class="string">'cookiejar'</span>: response.meta[<span class="string">'cookiejar'</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        callback=self.parse_followers</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>然后，我满心欢喜地运行了我的程序。然而，出现了404。</p><p>重复运行程序几次之后，我尝试在浏览器中手动登录。</p><p>此时我发现<span style="color:red">网页版也不能登录！</span></p><p>大概是微博启用了统一登录认证的原因，weibo.cn的登录功能已经失效。= =</p><h1 id="再次尝试"><a href="#再次尝试" class="headerlink" title="再次尝试"></a>再次尝试</h1><p>我把目标换到了<a href="http://m.weibo.cn/" target="_blank" rel="noopener">m.weibo.cn</a>。</p><p>经过了上面的惨痛教训，首先要解决登录问题。</p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p><a href="http://m.weibo.cn/" target="_blank" rel="noopener">m.weibo.cn</a>有滑动验证，暂时不知道要怎么解决。</p><p>先尝试直接传递cookie。</p><p>构造headers</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">        <span class="string">"Accept"</span>: <span class="string">"application/json, text/plain, */*"</span>,</span><br><span class="line">        <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip, deflate, sdch, br"</span>,</span><br><span class="line">        <span class="string">"Accept-Language"</span>: <span class="string">"zh-CN,zh;q=0.8,en;q=0.6"</span>,</span><br><span class="line">        <span class="string">"Cookie"</span>: cookie,</span><br><span class="line">        <span class="string">"Connection"</span>: <span class="string">"keep-alive"</span>,</span><br><span class="line">        <span class="string">"Host"</span>: <span class="string">"m.weibo.cn"</span>,</span><br><span class="line">        <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Linux; Android 5.1.1; Nexus 6 Build/LYZ28E) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Mobile Safari/537.36"</span>,</span><br><span class="line">        <span class="string">"X-Requested-With"</span>: <span class="string">"XMLHttpRequest"</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="找到粉丝页面-1"><a href="#找到粉丝页面-1" class="headerlink" title="找到粉丝页面"></a>找到粉丝页面</h2><p>接着，要找到粉丝页面。</p><p>然而，<a href="http://m.weibo.cn/u/1788911247?uid=1788911247" target="_blank" rel="noopener">谷大白话的页面</a>上<span style="color:red">没有可以进入的粉丝页面！</span></p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7dc7f96b49.png" alt="4.png"></p><p>主页中<span style="color:red">也找不到可以进入的粉丝页面！</span></p><p>难道<a href="http://m.weibo.cn" target="_blank" rel="noopener">m.weibo.cn</a>不能查看他人的粉丝？从现在的情况来看新浪没有提供查看他人粉丝的页面。</p><p>但是，经过一番折腾，我发现查看自己的粉丝的页面地址如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://m.weibo.cn/p/second?containerid=100505&#123;your_uid&#125;_-_FANS</span><br></pre></td></tr></table></figure><p>我尝试将其它的uid代入上面的地址，果然</p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7ddc2ed700.png" alt="5.png"></p><p>还是有方法能够看到他人的粉丝。</p><p>接着对页面进行分析</p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7deb00678b.png" alt="6.png"></p><p>我注意到这里有两个类型是<code>xhr</code>的文件</p><p>其中第一个的地址是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://m.weibo.cn/container/getSecond?containerid=1005051669282904_-_FOLLOWERS</span><br></pre></td></tr></table></figure><p>第二个的地址是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://m.weibo.cn/container/getSecond?containerid=1005051669282904_-_FOLLOWERS&amp;page=2</span><br></pre></td></tr></table></figure><p>打开第一个文件，部分内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"ok"</span>: <span class="number">1</span>, </span><br><span class="line">    <span class="attr">"msg"</span>: <span class="string">""</span>, </span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"关注"</span>, </span><br><span class="line">    <span class="attr">"card_type_name"</span>: <span class="string">"关注"</span>, </span><br><span class="line">    <span class="attr">"count"</span>: <span class="number">116</span>, </span><br><span class="line">    <span class="attr">"maxPage"</span>: <span class="number">12</span>, </span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"pageuserlist"</span>, </span><br><span class="line">    <span class="attr">"cards"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"card_type"</span>: <span class="number">10</span>, </span><br><span class="line">            <span class="attr">"user"</span>: &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="number">2142168143</span>, </span><br><span class="line">                <span class="attr">"screen_name"</span>: <span class="string">"全球健身中心"</span>, </span><br><span class="line">                <span class="attr">"profile_image_url"</span>: <span class="string">"http://tva3.sinaimg.cn/crop.0.2.1242.1242.180/7faee44fjw8f82cyhlfs0j20yi0ym40e.jpg"</span>, </span><br><span class="line">                <span class="attr">"profile_url"</span>: <span class="string">"http://m.weibo.cn/u/2142168143?uid=2142168143&amp;luicode=10000012&amp;lfid=1005051669282904_-_FOLLOWERS"</span>, </span><br><span class="line">                <span class="attr">"statuses_count"</span>: <span class="number">34184</span>, </span><br><span class="line">                <span class="attr">"verified"</span>: <span class="literal">true</span>, </span><br><span class="line">                <span class="attr">"verified_type"</span>: <span class="number">0</span>, </span><br><span class="line">                <span class="attr">"verified_type_ext"</span>: <span class="number">1</span>, </span><br><span class="line">                <span class="attr">"verified_reason"</span>: <span class="string">"优秀健身资讯博主 "</span>, </span><br><span class="line">                <span class="attr">"description"</span>: <span class="string">"最大最全的健身微博，来自中日韩欧美等最热门的健身教程，加上专业的教练指导，总有一款适合你！商务洽谈QQ：2851661283，邮箱：vvstar@inmyshow.com"</span>, </span><br><span class="line">                <span class="attr">"gender"</span>: <span class="string">"f"</span>, </span><br><span class="line">                <span class="attr">"mbtype"</span>: <span class="number">12</span>, </span><br><span class="line">                <span class="attr">"urank"</span>: <span class="number">42</span>, </span><br><span class="line">                <span class="attr">"mbrank"</span>: <span class="number">6</span>, </span><br><span class="line">                <span class="attr">"follow_me"</span>: <span class="literal">false</span>, </span><br><span class="line">                <span class="attr">"following"</span>: <span class="literal">false</span>, </span><br><span class="line">                <span class="attr">"followers_count"</span>: <span class="number">11532193</span>, </span><br><span class="line">                <span class="attr">"follow_count"</span>: <span class="number">441</span>, </span><br><span class="line">                <span class="attr">"cover_image_phone"</span>: <span class="string">"http://ww3.sinaimg.cn/crop.0.0.640.640.640/7faee44fgw1f82ck0dmrmj20yi0yh0vb.jpg"</span>, </span><br><span class="line">                <span class="attr">"desc1"</span>: <span class="literal">null</span>, </span><br><span class="line">                <span class="attr">"desc2"</span>: <span class="literal">null</span></span><br><span class="line">            &#125;, </span><br><span class="line">            <span class="attr">"scheme"</span>: <span class="string">"http://m.weibo.cn/u/2142168143?uid=2142168143&amp;luicode=10000012&amp;lfid=1005051669282904_-_FOLLOWERS"</span>, </span><br><span class="line">            <span class="attr">"desc1"</span>: <span class="string">"最大最全的健身微博，来自中日韩欧美等最热门的健身教程，加上专业的教练指导，总有一款适合你！商务洽谈QQ：2851661283，邮箱：vvstar@inmyshow.com"</span>, </span><br><span class="line">            <span class="attr">"desc2"</span>: <span class="string">""</span></span><br><span class="line">        &#125;, </span><br><span class="line">        ...</span><br><span class="line">    ], </span><br><span class="line">    <span class="attr">"cardlistInfo"</span>: &#123;</span><br><span class="line">        <span class="attr">"containerid"</span>: <span class="string">"1005051669282904_-_FOLLOWERS"</span>, </span><br><span class="line">        <span class="attr">"title"</span>: <span class="literal">null</span>, </span><br><span class="line">        <span class="attr">"page"</span>: <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，cards对应的value是一个list，其中的多个dict保存了follower的信息。</p><p>cardlistInfo对应的value是一个dict，其中page对应的value保存了下一页的页码。</p><p>接着向下滚动页面</p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7e10d0a24f.png" alt="7.png"></p><p>可以看到出现了更多的<code>xhr</code>文件。</p><p>至此，可以得到获取某人粉丝的步骤：</p><ol><li>访问<code>http://m.weibo.cn/container/getSecond?containerid=100505{uid}_-_FOLLOWERS</code>页面</li><li>从当前页面中解析若干个用户信息；</li><li>在当前页面找到下一页的地址并访问；</li><li>重复步骤2-3直到没有更多的用户信息。</li></ol><p>至此，可以容易地写出获取某人粉丝的程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_followers</span><span class="params">(self, response)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    解析关注者信息</span></span><br><span class="line"><span class="string">    :param response:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    logging.debug(<span class="string">'parse_followers'</span>)</span><br><span class="line">    jsonObj = json.loads(response.text)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解析cards中朋友信息</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cards = jsonObj.get(<span class="string">'cards'</span>)</span><br><span class="line">        <span class="keyword">for</span> card <span class="keyword">in</span> cards:</span><br><span class="line">            uid = card.get(<span class="string">'user'</span>).get(<span class="string">'id'</span>)</span><br><span class="line">            logging.info(card.get(<span class="string">'user'</span>).get(<span class="string">'screen_name'</span>))</span><br><span class="line">            <span class="keyword">yield</span> Request(</span><br><span class="line">                url=<span class="string">'&#123;0&#125;?containerid=230283&#123;1&#125;'</span>.format(self.getIndex, uid),</span><br><span class="line">                headers=self.headers,</span><br><span class="line">                callback=self.parse_person</span><br><span class="line">            )</span><br><span class="line">    <span class="comment"># 没有粉丝</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        msg = jsonObj[<span class="string">'msg'</span>]</span><br><span class="line">        print(msg)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解析下一页中的朋友信息</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        next_page = jsonObj[<span class="string">'cardlistInfo'</span>][<span class="string">'page'</span>]</span><br><span class="line">        <span class="keyword">yield</span> Request(</span><br><span class="line">            url=<span class="string">'&#123;0&#125;?containerid=100505&#123;1&#125;_-_FOLLOWERS&amp;page=&#123;2&#125;'</span>.format(self.getSecond, self.uid, next_page),</span><br><span class="line">            headers=self.headers,</span><br><span class="line">            callback=self.parse_followers</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'没有了'</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br></pre></td></tr></table></figure><h2 id="找到用户详细资料页面"><a href="#找到用户详细资料页面" class="headerlink" title="找到用户详细资料页面"></a>找到用户详细资料页面</h2><p>我感兴趣的用户资料在用户的<a href="http://m.weibo.cn/p/index?containerid=2302831195054531_-_INFO" target="_blank" rel="noopener">个人主页</a>，如下图</p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7e2e9b3efd.png" alt="8.png"></p><p>在Developer Tools中可以看到</p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7e54113335.png" alt="9.png"></p><p>有一个<code>xhr</code>文件，地址是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://m.weibo.cn/container/getIndex?containerid=2302831195054531_-_INFO</span><br></pre></td></tr></table></figure><p>内容是</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"cardlistInfo"</span>: &#123;</span><br><span class="line">        <span class="attr">"v_p"</span>: <span class="string">"42"</span>, </span><br><span class="line">        <span class="attr">"cardlist_title"</span>: <span class="string">"个人主页"</span>, </span><br><span class="line">        <span class="attr">"desc"</span>: <span class="string">""</span>, </span><br><span class="line">        <span class="attr">"show_style"</span>: <span class="number">1</span>, </span><br><span class="line">        <span class="attr">"containerid"</span>: <span class="string">"2302831195054531_-_INFO"</span>, </span><br><span class="line">        <span class="attr">"cardlist_menus"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"button_menus_refresh"</span>, </span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"刷新"</span></span><br><span class="line">            &#125;, </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"type"</span>: <span class="string">"gohome"</span>, </span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"返回首页"</span>, </span><br><span class="line">                <span class="attr">"params"</span>: &#123;</span><br><span class="line">                    <span class="attr">"scheme"</span>: <span class="string">"sinaweibo://gotohome"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ], </span><br><span class="line">        <span class="attr">"page"</span>: <span class="literal">null</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">"cards"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"card_type"</span>: <span class="number">11</span>, </span><br><span class="line">            <span class="attr">"show_type"</span>: <span class="number">2</span>, </span><br><span class="line">            <span class="attr">"card_group"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"card_type"</span>: <span class="number">41</span>, </span><br><span class="line">                    <span class="attr">"item_name"</span>: <span class="string">"昵称"</span>, </span><br><span class="line">                    <span class="attr">"item_content"</span>: <span class="string">"博物杂志"</span>, </span><br><span class="line">                    <span class="attr">"openurl"</span>: <span class="string">""</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"card_type"</span>: <span class="number">41</span>, </span><br><span class="line">                    <span class="attr">"item_type"</span>: <span class="string">"set_remark"</span>, </span><br><span class="line">                    <span class="attr">"uid"</span>: <span class="string">"1195054531"</span>, </span><br><span class="line">                    <span class="attr">"item_name"</span>: <span class="string">"Tap to set alias"</span>, </span><br><span class="line">                    <span class="attr">"item_content"</span>: <span class="string">""</span>, </span><br><span class="line">                    <span class="attr">"display_arrow"</span>: <span class="number">1</span>, </span><br><span class="line">                    <span class="attr">"openurl"</span>: <span class="string">""</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"card_type"</span>: <span class="number">41</span>, </span><br><span class="line">                    <span class="attr">"item_content"</span>: <span class="string">"博物杂志官方微博"</span>, </span><br><span class="line">                    <span class="attr">"item_type"</span>: <span class="string">"verify_blue"</span>, </span><br><span class="line">                    <span class="attr">"itemid"</span>: <span class="string">"2302831195054531_-_WEIBO_INDEX_PROFILE_VERFIED_CARD"</span>, </span><br><span class="line">                    <span class="attr">"actionlog"</span>: &#123;</span><br><span class="line">                        <span class="attr">"act_code"</span>: <span class="string">"594"</span>, </span><br><span class="line">                        <span class="attr">"uicode"</span>: <span class="string">"10000198"</span>, </span><br><span class="line">                        <span class="attr">"oid"</span>: <span class="string">"http://verified.weibo.com/verify"</span>, </span><br><span class="line">                        <span class="attr">"fid"</span>: <span class="string">"2302831195054531"</span>, </span><br><span class="line">                        <span class="attr">"cardid"</span>: <span class="string">"230283_-_WEIBO_INDEX_PROFILE_VERFIED_CARD"</span>, </span><br><span class="line">                        <span class="attr">"ext"</span>: <span class="string">"uid:1195054531|ptype:0"</span></span><br><span class="line">                    &#125;, </span><br><span class="line">                    <span class="attr">"openurl"</span>: <span class="string">""</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"card_type"</span>: <span class="number">41</span>, </span><br><span class="line">                    <span class="attr">"item_name"</span>: <span class="string">"标签"</span>, </span><br><span class="line">                    <span class="attr">"item_content"</span>: <span class="string">"搞笑"</span>, </span><br><span class="line">                    <span class="attr">"display_arrow"</span>: <span class="number">0</span>, </span><br><span class="line">                    <span class="attr">"scheme"</span>: <span class="string">""</span>, </span><br><span class="line">                    <span class="attr">"actionlog"</span>: &#123;</span><br><span class="line">                        <span class="attr">"act_code"</span>: <span class="string">"594"</span>, </span><br><span class="line">                        <span class="attr">"uicode"</span>: <span class="string">"10000198"</span>, </span><br><span class="line">                        <span class="attr">"oid"</span>: <span class="string">""</span>, </span><br><span class="line">                        <span class="attr">"fid"</span>: <span class="string">"2302831195054531"</span>, </span><br><span class="line">                        <span class="attr">"cardid"</span>: <span class="string">"230283_-_WEIBO_INDEX_PROFILE_CTAG"</span>, </span><br><span class="line">                        <span class="attr">"ext"</span>: <span class="string">"uid:1195054531|ptype:0"</span></span><br><span class="line">                    &#125;, </span><br><span class="line">                    <span class="attr">"openurl"</span>: <span class="string">""</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"card_type"</span>: <span class="number">41</span>, </span><br><span class="line">                    <span class="attr">"item_name"</span>: <span class="string">"所在地"</span>, </span><br><span class="line">                    <span class="attr">"item_content"</span>: <span class="string">"北京 朝阳区"</span>, </span><br><span class="line">                    <span class="attr">"openurl"</span>: <span class="string">""</span></span><br><span class="line">                &#125;, </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"card_type"</span>: <span class="number">41</span>, </span><br><span class="line">                    <span class="attr">"item_name"</span>: <span class="string">"简介"</span>, </span><br><span class="line">                    <span class="attr">"item_content"</span>: <span class="string">"我是博物学科普杂志，买杂志去报刊亭、邮局、天猫“中国国家地理旗舰店”，买博物文创去淘宝“博物小馆”"</span>, </span><br><span class="line">                    <span class="attr">"openurl"</span>: <span class="string">""</span></span><br><span class="line">                &#125;</span><br><span class="line">            ], </span><br><span class="line">            <span class="attr">"openurl"</span>: <span class="string">""</span></span><br><span class="line">        &#125;, </span><br><span class="line">        ...</span><br><span class="line">    ], </span><br><span class="line">    <span class="attr">"ok"</span>: <span class="number">1</span>, </span><br><span class="line">    <span class="attr">"seeLevel"</span>: <span class="number">3</span>, </span><br><span class="line">    <span class="attr">"showAppTips"</span>: <span class="number">0</span>, </span><br><span class="line">    <span class="attr">"scheme"</span>: <span class="string">"sinaweibo://cardlist?containerid=2302831195054531_-_INFO&amp;luicode=10000011&amp;lfid=2302831195054531_-_INFO&amp;featurecode="</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我感兴趣的信息可以从cards中解析出来。</p><p>至此，可以得到获取某人详细信息的步骤：</p><ol><li>取得粉丝uid，访问<code>http://m.weibo.cn/container/getIndex?containerid=230283{uid}_-_INFO</code>页面；</li><li>在当前页面解析cards中感兴趣的内容；</li><li>重复步骤1-2，直到没有更多粉丝。</li></ol><p>至此，可以容易地写出获取某人详细信息的程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_person</span><span class="params">(self, response)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    解析个人信息</span></span><br><span class="line"><span class="string">    :param response:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    jsonObj = json.loads(response.text)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取信息出错</span></span><br><span class="line">    <span class="keyword">if</span> jsonObj.get(<span class="string">'msg'</span>):</span><br><span class="line">        <span class="comment"># 再次调用parse_person</span></span><br><span class="line">        <span class="keyword">yield</span> Request(</span><br><span class="line">            url=response.url,</span><br><span class="line">            headers=self.headers,</span><br><span class="line">            callback=self.parse_person</span><br><span class="line">        )</span><br><span class="line">    item = WeiboItem()</span><br><span class="line">    <span class="comment"># 从response.url中截取uid</span></span><br><span class="line">    item[<span class="string">'uid'</span>] = response.url.split(<span class="string">'_'</span>)[<span class="number">0</span>].split(<span class="string">'='</span>)[<span class="number">1</span>][<span class="number">6</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历cards</span></span><br><span class="line">    cards = jsonObj.get(<span class="string">'cards'</span>) <span class="keyword">or</span> []</span><br><span class="line">    <span class="keyword">for</span> something <span class="keyword">in</span> cards:</span><br><span class="line">        card_group = something.get(<span class="string">'card_group'</span>) <span class="keyword">or</span> []</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 遍历card_group，逐项寻找感兴趣的信息</span></span><br><span class="line">        <span class="keyword">for</span> card <span class="keyword">in</span> card_group:</span><br><span class="line">            item_name = card.get(<span class="string">'item_name'</span>)</span><br><span class="line">            <span class="comment"># logging.debug(item_name)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">'昵称'</span> == item_name:</span><br><span class="line">                item[<span class="string">'name'</span>] = card.get(<span class="string">'item_content'</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">'性别'</span> == item_name:</span><br><span class="line">                item[<span class="string">'gender'</span>] = card.get(<span class="string">'item_content'</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">'所在地'</span> == item_name:</span><br><span class="line">                item[<span class="string">'location'</span>] = card.get(<span class="string">'item_content'</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">'简介'</span> == item_name:</span><br><span class="line">                item[<span class="string">'intro'</span>] = card.get(<span class="string">'item_content'</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">'注册时间'</span> == item_name:</span><br><span class="line">                item[<span class="string">'signin'</span>] = card.get(<span class="string">'item_content'</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">'学校'</span> == item_name:</span><br><span class="line">                item[<span class="string">'school'</span>] = card.get(<span class="string">'item_content'</span>)</span><br><span class="line">            <span class="keyword">elif</span> <span class="string">'公司'</span> == item_name:</span><br><span class="line">                item[<span class="string">'company'</span>] = card.get(<span class="string">'item_content'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><p><span style="color:red">由于微博限制，此方法只能获取100个左右的粉丝信息</span></p><p><img src="https://ooo.0o0.ooo/2017/03/14/58c7ff1a0bb63.png" alt="10.png"></p><h1 id="有待改进"><a href="#有待改进" class="headerlink" title="有待改进"></a>有待改进</h1><ul><li style="list-style: none"><input type="checkbox"> 实现模拟登录</li><li style="list-style: none"><input type="checkbox"> 找到能获取更多粉丝的方法</li><li style="list-style: none"><input type="checkbox"> 尝试使用IP池</li></ul>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> scrapy </tag>
            
            <tag> 微博 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记异或的用法</title>
      <link href="/2017/02/18/%E8%AE%B0%E5%BC%82%E6%88%96%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2017/02/18/%E8%AE%B0%E5%BC%82%E6%88%96%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>LeetCode上<a href="https://leetcode.com/problems/single-number" target="_blank" rel="noopener">有道题</a>，要求找出一个其它所有元素都出现两次的整数数组中，唯一的只出现一次的元素。</p><a id="more"></a><h1 id="我的想法"><a href="#我的想法" class="headerlink" title="我的想法"></a>我的想法</h1><p>我本来准备将所有出现过的元素的值记为index，在nums数组中将nums[index]添上负号。遍历一次数组之后只用查看跟原数组符号不一致的数，返回序号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">singleNumber</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        nums = [<span class="number">0</span>] + nums</span><br><span class="line">        old_nums = list(nums)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            index = abs(nums[i])</span><br><span class="line">            nums[index] = -(nums[index])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            <span class="keyword">if</span> (old_nums[i] - nums[i]) != <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure><p>测试了一下我发现这个方法不能找到&lt;0的元素 = =</p><h1 id="正确的解法"><a href="#正确的解法" class="headerlink" title="正确的解法"></a>正确的解法</h1><p>点开discuss我发现了一个使用异或的算法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">singleNumber</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">            result ^= num</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>异或的性质中有以下三条：</p><blockquote><p>交换律：A ⊕ B = B ⊕ A</p><p>归零律：X ⊕ X = 0</p><p>恒等律：X ⊕ 0 = X</p></blockquote><p>所以对于一个数组[2,1,4,5,2,4,1]，上面的算法计算过程如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(0^2^1^4^5^2^4^1) =&gt; ((2^2)^(1^1)^(4^4)^(5)) =&gt; (0^0^0^5) =&gt; 5</span><br></pre></td></tr></table></figure><p>学离散数学的时候只背了几个定律，确没真正意识到异或的神奇之处。</p><h1 id="异或的其它应用"><a href="#异或的其它应用" class="headerlink" title="异或的其它应用"></a>异或的其它应用</h1><h2 id="快速比较两个值"><a href="#快速比较两个值" class="headerlink" title="快速比较两个值"></a>快速比较两个值</h2><p>判断<code>a ^ b == 0</code></p><h2 id="翻转二进制的特定位"><a href="#翻转二进制的特定位" class="headerlink" title="翻转二进制的特定位"></a>翻转二进制的特定位</h2><p>由于异或的性质，使得</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> ^ <span class="number">1</span> = <span class="number">1</span></span><br><span class="line"><span class="number">1</span> ^ <span class="number">1</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>所以对于一个二进制数<code>10100001</code>，想要翻转它的第6位，可以如此：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10100001</span></span><br><span class="line">mask = <span class="number">1</span> &lt;&lt; <span class="number">6</span></span><br><span class="line">a = a ^ mask</span><br></pre></td></tr></table></figure><h2 id="奇偶校验"><a href="#奇偶校验" class="headerlink" title="奇偶校验"></a>奇偶校验</h2><p>将一个二进制数<code>10100001</code>逐位异或，结果为<code>1</code>就包含奇数个1，结果为<code>0</code>就包含偶数个1。</p><p>解释：</p><p>对于式子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> ^ <span class="number">0</span> ^ <span class="number">1</span> ^ <span class="number">0</span> ^ <span class="number">0</span> ^ <span class="number">0</span> ^ <span class="number">0</span> ^ <span class="number">1</span></span><br></pre></td></tr></table></figure><p>因为归零律，可以消掉所有的0。</p><p>因为<code>1 ^ 1 = 0</code>，可以消掉成对的<code>1</code>。</p><p>若还有剩下的<code>1</code>，式子的值为1；若没有剩下的<code>1</code>，式子的值为0。</p><h2 id="无辅助空间交换两个值"><a href="#无辅助空间交换两个值" class="headerlink" title="无辅助空间交换两个值"></a>无辅助空间交换两个值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = a ^ b</span><br><span class="line">b = a ^ b<span class="comment"># b = a ^ b ^ b = a ^ 0 = a</span></span><br><span class="line">a = a ^ b<span class="comment"># a = a ^ b ^ a = b ^ 0 = b</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> xor </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>FLask扩展——Flask-SQLAlchemy</title>
      <link href="/2017/02/16/FLask%E6%89%A9%E5%B1%95%E2%80%94%E2%80%94Flask-SQLAlchemy/"/>
      <url>/2017/02/16/FLask%E6%89%A9%E5%B1%95%E2%80%94%E2%80%94Flask-SQLAlchemy/</url>
      <content type="html"><![CDATA[<p>Flask-SQLAlchemy 是一个 Flask 扩展，简化了在 Flask 程序中使用 SQLAlchemy 的操作。 </p><p>SQLAlchemy 是一个很强大的关系型数据库框架，支持多种数据库后台。 SQLAlchemy 提<br>供了高层 ORM，也提供了使用数据库原生 SQL 的低层功能。 </p><a id="more"></a><h1 id="使用Flask-SQLAlchemy管理数据库"><a href="#使用Flask-SQLAlchemy管理数据库" class="headerlink" title="使用Flask-SQLAlchemy管理数据库"></a>使用Flask-SQLAlchemy管理数据库</h1><p>最流行的数据库引擎采用的数据库URL格式如表所示：</p><blockquote><p><a href="http://docs.sqlalchemy.org/en/latest/core/engines.html" target="_blank" rel="noopener">Flask-SQLAlchemy数据库URL</a></p><table><thead><tr><th>数据库引擎</th><th>URL</th></tr></thead><tbody><tr><td>MySQL</td><td>mysql://username:password@hostname/database</td></tr><tr><td>Postgres</td><td>postgresql://username:password@hostname/database</td></tr><tr><td>Oracle</td><td>oracle://username:password@hostname/database</td></tr><tr><td>SQL Server</td><td>mssql+pyodbc://username:password@database</td></tr><tr><td>SQLite (Unix)</td><td>sqlite:////absolute/path/to/database</td></tr><tr><td>SQLite (Windows)</td><td>sqlite:///c:/absolute/path/to/database</td></tr></tbody></table></blockquote><p>程序使用的数据库 URL 必须保存到 Flask 配置对象的 SQLALCHEMY_DATABASE_URI 键中。 </p><p>配置对象的SQLALCHEMY_COMMIT_ON_TEARDOWN 键，将其设为 True时，每次请求结束后都会自动提交数据库中的变动。 </p><h1 id="定义模型"><a href="#定义模型" class="headerlink" title="定义模型"></a>定义模型</h1><p>在ORM中，模型一般是一个Python类，其中的属性对应数据库表中的列。</p><p>示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> learnFlask <span class="keyword">import</span> db</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Role</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'roles'</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="keyword">True</span>)</span><br><span class="line">    name = db.Column(db.String(<span class="number">64</span>), unique=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;Role %r&gt;'</span> % self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'users'</span></span><br><span class="line">    id = db.Column(db.Integer, primary_key=<span class="keyword">True</span>)</span><br><span class="line">    username = db.Column(db.String(<span class="number">64</span>), unique=<span class="keyword">True</span>, index=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;User %r&gt;'</span> % self.username</span><br></pre></td></tr></table></figure><p>如果没有定义<code>__tablename__</code>，Flask-SQLAlchemy会使用一个默认名字，但默认的表明没有遵守使用复数形式进行命名的约定。</p><blockquote><p>最常用的SQLAlchemy列类型</p><table><thead><tr><th style="text-align:left">类型名</th><th style="text-align:left">Python类型</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">Integer</td><td style="text-align:left">int</td><td style="text-align:left">普通整数，一般是 32 位</td></tr><tr><td style="text-align:left">SmallInteger</td><td style="text-align:left">int</td><td style="text-align:left">取值范围小的整数，一般是 16 位</td></tr><tr><td style="text-align:left">BigInteger</td><td style="text-align:left">int 或 long</td><td style="text-align:left">不限制精度的整数</td></tr><tr><td style="text-align:left">Float</td><td style="text-align:left">float</td><td style="text-align:left">浮点数</td></tr><tr><td style="text-align:left">Numeric</td><td style="text-align:left">decimal.Decimal</td><td style="text-align:left">定点数</td></tr><tr><td style="text-align:left">String</td><td style="text-align:left">str</td><td style="text-align:left">变长字符串</td></tr><tr><td style="text-align:left">Text</td><td style="text-align:left">str</td><td style="text-align:left">变长字符串，对较长或不限长度的字符串做了优化</td></tr><tr><td style="text-align:left">Unicode</td><td style="text-align:left">unicode</td><td style="text-align:left">变长 Unicode 字符串</td></tr><tr><td style="text-align:left">UnicodeText</td><td style="text-align:left">unicode</td><td style="text-align:left">变长 Unicode 字符串，对较长或不限长度的字符串做了优化</td></tr><tr><td style="text-align:left">Boolean</td><td style="text-align:left">bool</td><td style="text-align:left">布尔值</td></tr><tr><td style="text-align:left">Date</td><td style="text-align:left">datetime.date</td><td style="text-align:left">日期</td></tr><tr><td style="text-align:left">Time</td><td style="text-align:left">datetime.time</td><td style="text-align:left">时间</td></tr><tr><td style="text-align:left">DateTime</td><td style="text-align:left">datetime.datetime</td><td style="text-align:left">日期和时间</td></tr><tr><td style="text-align:left">Interval</td><td style="text-align:left">datetime.timedelta</td><td style="text-align:left">时间间隔</td></tr><tr><td style="text-align:left">Enum</td><td style="text-align:left">str</td><td style="text-align:left">一组字符串</td></tr><tr><td style="text-align:left">PickleType</td><td style="text-align:left">任何 Python 对象</td><td style="text-align:left">自动使用 Pickle 序列化</td></tr><tr><td style="text-align:left">LargeBinary</td><td style="text-align:left">str</td><td style="text-align:left">二进制文件</td></tr></tbody></table><p>最常使用的SQLAlchemy列选项</p><table><thead><tr><th style="text-align:left">选项名</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">primary_key</td><td style="text-align:left">如果设为 True，这列就是表的主键</td></tr><tr><td style="text-align:left">unique</td><td style="text-align:left">如果设为 True，这列不允许出现重复的值</td></tr><tr><td style="text-align:left">index</td><td style="text-align:left">如果设为 True，为这列创建索引，提升查询效率</td></tr><tr><td style="text-align:left">nullable</td><td style="text-align:left">如果设为 True，这列允许使用空值；如果设为 False，这列不允许使用空值</td></tr><tr><td style="text-align:left">default</td><td style="text-align:left">为这列定义默认值</td></tr></tbody></table></blockquote><h1 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h1><h2 id="一对多关系"><a href="#一对多关系" class="headerlink" title="一对多关系"></a>一对多关系</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Role</span><span class="params">(db.Model)</span>:</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">users = db.relationship(<span class="string">'User'</span>, backref=<span class="string">'role'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(db.Model)</span>:</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">role_id = db.Column(db.Integer, db.ForeignKey(<span class="string">'roles.id'</span>))</span><br></pre></td></tr></table></figure><blockquote><p>常用的SQLAlchemy关系选项</p><table><thead><tr><th style="text-align:left">选项名</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">backref</td><td style="text-align:left">在关系的另一个模型中添加反向引用</td></tr><tr><td style="text-align:left">primaryjoin</td><td style="text-align:left">明确指定两个模型之间使用的联结条件。只在模棱两可的关系中需要指定</td></tr><tr><td style="text-align:left">lazy</td><td style="text-align:left">指定如何加载相关记录。可选值有 select（首次访问时按需加载）、immediate（源对象加载后就加载）、 joined（加载记录，但使用联结）、 subquery（立即加载，但使用子查询），noload（永不加载）和 dynamic（不加载记录，但提供加载记录的查询）</td></tr><tr><td style="text-align:left">uselist</td><td style="text-align:left">如果设为 Fales，不使用列表，而使用标量值</td></tr><tr><td style="text-align:left">order_by</td><td style="text-align:left">指定关系中记录的排序方式</td></tr><tr><td style="text-align:left">secondary</td><td style="text-align:left">指定多对多关系中关系表的名字</td></tr><tr><td style="text-align:left">secondaryjoin</td><td style="text-align:left">SQLAlchemy 无法自行决定时，指定多对多关系中的二级联结条件</td></tr></tbody></table></blockquote><h1 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h1><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.drop_all()</span><br><span class="line">db.create_all()</span><br></pre></td></tr></table></figure><h2 id="插入行"><a href="#插入行" class="headerlink" title="插入行"></a>插入行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hello <span class="keyword">import</span> Role, User</span><br><span class="line">admin_role = Role(name=<span class="string">'Admin'</span>)</span><br><span class="line">mod_role = Role(name=<span class="string">'Moderator'</span>)</span><br><span class="line">user_role = Role(name=<span class="string">'User'</span>)</span><br><span class="line">user_john = User(username=<span class="string">'john'</span>, role=admin_role)</span><br><span class="line">user_susan = User(username=<span class="string">'susan'</span>, role=user_role)</span><br><span class="line">user_david = User(username=<span class="string">'david'</span>, role=user_role)</span><br></pre></td></tr></table></figure><p>通过数据库会话管理对数据库所做的改动</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.session.add(admin_role)</span><br><span class="line">db.session.add(mod_role)</span><br><span class="line">db.session.add(user_role)</span><br><span class="line">db.session.add(user_john)</span><br><span class="line">db.session.add(user_susan)</span><br><span class="line">db.session.add(user_david)</span><br></pre></td></tr></table></figure><p>为了把对象写入数据库，我们要调用<code>commit()</code>方法提交会话</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><h2 id="修改行"><a href="#修改行" class="headerlink" title="修改行"></a>修改行</h2><p>调用<code>add()</code>方法更新模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">admin_role.name = <span class="string">'Administrator'</span></span><br><span class="line">db.session.add(admin_role)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><h2 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h2><p>调用<code>delete()</code>方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.session.delete(mod_role)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><h2 id="查询行"><a href="#查询行" class="headerlink" title="查询行"></a>查询行</h2><h3 id="取回对应表中所有的记录"><a href="#取回对应表中所有的记录" class="headerlink" title="取回对应表中所有的记录"></a>取回对应表中所有的记录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Role.query.all()</span><br></pre></td></tr></table></figure><p>通过过滤器可以进行更精确的数据库查询。</p><p>查询角色为‘User’的所有用户：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User.query.filter_by(role=user_role).all()</span><br></pre></td></tr></table></figure><blockquote><p>常用的SQLAlchemy查询过滤器</p><table><thead><tr><th>过滤器</th><th>说明</th></tr></thead><tbody><tr><td>filter()</td><td>把过滤器添加到原查询上，返回一个新查询</td></tr><tr><td>filter_by()</td><td>把等值过滤器添加到原查询上，返回一个新查询</td></tr><tr><td>limit()</td><td>使用指定的值限制原查询返回的结果数量，返回一个新查询</td></tr><tr><td>offset()</td><td>偏移原查询返回的结果，返回一个新查询</td></tr><tr><td>order_by()</td><td>根据指定条件对原查询结果进行排序，返回一个新查询</td></tr><tr><td>group_by()</td><td>根据指定条件对原查询结果进行分组，返回一个新查询</td></tr></tbody></table><p>常用的SQLAlchemy查询执行函数</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>all()</td><td>以列表形式返回查询的所有结果</td></tr><tr><td>first()</td><td>返回查询的第一个结果，如果没有结果，则返回 None</td></tr><tr><td>first_or_404()</td><td>返回查询的第一个结果，如果没有结果，则终止请求，返回 404 错误响应</td></tr><tr><td>get()</td><td>返回指定主键对应的行，如果没有对应的行，则返回 None</td></tr><tr><td>get_or_404()</td><td>返回指定主键对应的行，如果没找到指定的主键，则终止请求，返回 404 错误响应</td></tr><tr><td>count()</td><td>返回查询结果的数量</td></tr><tr><td>paginate()</td><td>返回一个 Paginate 对象，它包含指定范围内的结果</td></tr></tbody></table></blockquote>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Flask </tag>
            
            <tag> 扩展 </tag>
            
            <tag> SQLAlchemy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Flask扩展——Flask-WTF</title>
      <link href="/2017/02/16/Flask%E6%89%A9%E5%B1%95%E2%80%94%E2%80%94Flask-WTF/"/>
      <url>/2017/02/16/Flask%E6%89%A9%E5%B1%95%E2%80%94%E2%80%94Flask-WTF/</url>
      <content type="html"><![CDATA[<p><a href="https://flask-wtf.readthedocs.io/" target="_blank" rel="noopener">Flask-WTF</a> 提供了简单的 <a href="http://wtforms.simplecodes.com/docs/" target="_blank" rel="noopener">WTForms</a> 的集成，可以把处理 Web 表单的过程变成一种愉悦的体验。 </p><a id="more"></a><h1 id="跨站请求伪造保护"><a href="#跨站请求伪造保护" class="headerlink" title="跨站请求伪造保护"></a>跨站请求伪造保护</h1><p><a href="https://zh.wikipedia.org/zh/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0" target="_blank" rel="noopener">跨站请求伪造(Cross-Site Request Forgery)</a>，也被称为 <strong>one-click attack</strong> 或者 <strong>session riding</strong>，通常缩写为 <strong>CSRF</strong> 或者 <strong>XSRF</strong>， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。CSRF 利用的是网站对用户网页浏览器的信任。</p><p>为了实现 CSRF 保护， Flask-WTF 需要程序设置一个密钥。 Flask-WTF 使用这个密钥生成<br>加密令牌，再用令牌验证请求中表单数据的真伪。 </p><h2 id="设置密钥"><a href="#设置密钥" class="headerlink" title="设置密钥"></a>设置密钥</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = <span class="string">'hard to guess string'</span></span><br></pre></td></tr></table></figure><h1 id="表单类"><a href="#表单类" class="headerlink" title="表单类"></a>表单类</h1><p>每个 Web 表单都由一个继承自 Form 的类表示。 </p><p>简单表单示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask.ext.wtf <span class="keyword">import</span> Form</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> StringField, SubmitField</span><br><span class="line"><span class="keyword">from</span> wtforms.validators <span class="keyword">import</span> DataRequired</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameForm</span><span class="params">(Form)</span>:</span></span><br><span class="line">    name = StringField(<span class="string">'What is your name?'</span>, validators=[DataRequired()])</span><br><span class="line">    submit = SubmitField(<span class="string">'Submit'</span>)</span><br></pre></td></tr></table></figure><p>Name表单中包含一个name文本字段和一个submit提交按钮，其中name文本字段的validators是一个由验证函数组成的列表。</p><blockquote><p><a href="http://wtforms.readthedocs.io/en/latest/fields.html#basic-fields" target="_blank" rel="noopener">WTForms支持的HTML字段</a>如下：</p><table><thead><tr><th style="text-align:left">字段类型</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">StringField</td><td style="text-align:left">文本字段</td></tr><tr><td style="text-align:left">TextAreaField</td><td style="text-align:left">多行文本字段</td></tr><tr><td style="text-align:left">PasswordField</td><td style="text-align:left">密码文本字段</td></tr><tr><td style="text-align:left">HiddenField</td><td style="text-align:left">隐藏文本字段</td></tr><tr><td style="text-align:left">DateField</td><td style="text-align:left">文本字段，值为datetime.date格式</td></tr><tr><td style="text-align:left">DateTimeField</td><td style="text-align:left">文本字段，值为datetime.datetime格式</td></tr><tr><td style="text-align:left">IntegerField</td><td style="text-align:left">文本字段，值为整数</td></tr><tr><td style="text-align:left">DecimalField</td><td style="text-align:left">文本字段，值为decimal.Decimal</td></tr><tr><td style="text-align:left">FloatField</td><td style="text-align:left">文本字段，值为浮点数</td></tr><tr><td style="text-align:left">BooleanField</td><td style="text-align:left">复选框，值为True和False</td></tr><tr><td style="text-align:left">RadioField</td><td style="text-align:left">一组单选框</td></tr><tr><td style="text-align:left">SelectField</td><td style="text-align:left">下拉列表</td></tr><tr><td style="text-align:left">SelectMultipleField</td><td style="text-align:left">下拉列表，可选择多个值</td></tr><tr><td style="text-align:left">FileField</td><td style="text-align:left">文件上传字段</td></tr><tr><td style="text-align:left">MultipleFileField</td><td style="text-align:left">允许选择多个文件的FileField</td></tr><tr><td style="text-align:left">SubmitField</td><td style="text-align:left">表单提交按钮</td></tr><tr><td style="text-align:left">FormField</td><td style="text-align:left">把表单作为字段嵌入另一个表单</td></tr><tr><td style="text-align:left">FieldList</td><td style="text-align:left">一组指定类型的字段</td></tr></tbody></table><p><a href="http://wtforms.readthedocs.io/en/latest/validators.html#built-in-validators" target="_blank" rel="noopener">WTForms</a>内建的验证函数如下：</p><table><thead><tr><th>验证函数</th><th>说明</th></tr></thead><tbody><tr><td>DataRequired</td><td>确保输入的值有效（只含有空格的字符串被认为是无效的）</td></tr><tr><td>Email</td><td>验证电子邮件</td></tr><tr><td>EqualTo</td><td>比较两个字段的值；常用于要求输入两次密码进行确认的情况</td></tr><tr><td>InputRequired</td><td>确保有值输入</td></tr><tr><td>IPAddress</td><td>验证IPv4网络地址</td></tr><tr><td>Length</td><td>验证输入字符串的长度</td></tr><tr><td>MacAddress</td><td>验证MAC地址</td></tr><tr><td>NumberRange</td><td>验证输入的值在数字范围内</td></tr><tr><td>Optional</td><td>无输入值时跳过其他验证函数</td></tr><tr><td>Regexp</td><td>使用正则表达式验证输入值</td></tr><tr><td>URL</td><td>验证URL</td></tr><tr><td>UUID</td><td>验证UUID</td></tr><tr><td>AnyOf</td><td>确保输入值在可选值列表中</td></tr><tr><td>NoneOf</td><td>确保输入值不在可选列表中</td></tr></tbody></table></blockquote><h1 id="把表单渲染成HTML"><a href="#把表单渲染成HTML" class="headerlink" title="把表单渲染成HTML"></a>把表单渲染成HTML</h1><p>使用Flask-Bootstrap扩展，可以使用Bootstrap中预先定义好的表单样式渲染整个Flask-WTF表单。</p><p><code>templates/index.html</code>文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends <span class="string">"base.html"</span> %&#125;</span><br><span class="line">&#123;% <span class="keyword">import</span> <span class="string">"bootstrap/wtf.html"</span> <span class="keyword">as</span> wtf %&#125;</span><br><span class="line">&#123;% block title %&#125;Flasky&#123;% endblock %&#125;</span><br><span class="line">&#123;% block page_content %&#125;</span><br><span class="line">    &lt;div class="page-header"&gt;</span><br><span class="line">        &lt;h1&gt;Hello, &#123;% if name %&#125;&#123;&#123; name &#125;&#125;&#123;% else %&#125;Stranger&#123;% endif %&#125;!&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &#123;&#123; wtf.quick_form(form) &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h1 id="在视图函数中处理表单"><a href="#在视图函数中处理表单" class="headerlink" title="在视图函数中处理表单"></a>在视图函数中处理表单</h1><p><code>app.py</code>文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="keyword">None</span></span><br><span class="line">    form = NameForm()</span><br><span class="line">    <span class="keyword">if</span> form.validate_on_submit():</span><br><span class="line">        name = form.name.data</span><br><span class="line">        form.name.data = <span class="string">''</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, form=form, name=name)</span><br></pre></td></tr></table></figure><blockquote><p>当用户提交POST请求时，form.validate_on_submit()将会返回True。</p></blockquote><h1 id="提交表单后的效果"><a href="#提交表单后的效果" class="headerlink" title="提交表单后的效果"></a>提交表单后的效果</h1><p><img src="https://ooo.0o0.ooo/2017/02/16/58a56238257f8.png" alt="下载 (1).png"></p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Flask </tag>
            
            <tag> 扩展 </tag>
            
            <tag> WTForms </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Flask扩展——Flask-Moment</title>
      <link href="/2017/02/16/Flask%E6%89%A9%E5%B1%95%E2%80%94%E2%80%94Flask-Moment/"/>
      <url>/2017/02/16/Flask%E6%89%A9%E5%B1%95%E2%80%94%E2%80%94Flask-Moment/</url>
      <content type="html"><![CDATA[<p><a href="https://momentjs.com/" target="_blank" rel="noopener">Moment.js</a>是一个JavaScript日期处理类库，用于解析、检验、操作以及显示日期。</p><p>Flask-Moment是一个集成moment.js到Jinja2模板的Flask扩展。</p><a id="more"></a><h1 id="初始化Flask-Moment"><a href="#初始化Flask-Moment" class="headerlink" title="初始化Flask-Moment"></a>初始化Flask-Moment</h1><h2 id="import"><a href="#import" class="headerlink" title="import"></a>import</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask.ext.moment <span class="keyword">import</span> Moment</span><br><span class="line">moment = Moment(app)</span><br></pre></td></tr></table></figure><h2 id="更换moment-js到国内CDN"><a href="#更换moment-js到国内CDN" class="headerlink" title="更换moment.js到国内CDN"></a>更换moment.js到国内CDN</h2><p>在<code>flask_moment.py</code>文件中，找到并修改：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">js = '<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/moment.js/%s/%s"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>\n' % (version, js_filename)</span><br></pre></td></tr></table></figure><h2 id="在base-html中引入moment-js"><a href="#在base-html中引入moment-js" class="headerlink" title="在base.html中引入moment.js"></a>在<code>base.html</code>中引入<code>moment.js</code></h2><p>Flask-Moment依赖<code>moment.js</code>和<code>jquery.js</code>，需要直接包含在HTML文档里。</p><p>使用了Flask-BootStrap扩展后，<code>base.html</code>已从<code>bootstrap/base.html</code>处继承到了<code>jquery.js</code>，只需引入<code>moment.js</code>。</p><p><code>templates/base.html</code>文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block scripts %&#125;</span><br><span class="line">    &#123;&#123; super() &#125;&#125;</span><br><span class="line">    &#123;&#123; moment.include_moment() &#125;&#125;</span><br><span class="line">    &#123;&#123; moment.lang(<span class="string">"zh-CN"</span>) &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用<code>moment.lang(&quot;zh-CN&quot;)</code>将语言修改为简体中文</p></blockquote><h1 id="使用Flask-Moment"><a href="#使用Flask-Moment" class="headerlink" title="使用Flask-Moment"></a>使用Flask-Moment</h1><h2 id="渲染时传入datetime"><a href="#渲染时传入datetime" class="headerlink" title="渲染时传入datetime"></a>渲染时传入datetime</h2><p><code>app.py</code>文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,current_time=datetime.utcnow())</span><br></pre></td></tr></table></figure><h2 id="在模板中渲染"><a href="#在模板中渲染" class="headerlink" title="在模板中渲染"></a>在模板中渲染</h2><p><code>index.html</code>文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends <span class="string">'base.html'</span> %&#125;</span><br><span class="line">&#123;% block page_content %&#125;</span><br><span class="line">&lt;p&gt;The local date and time is &#123;&#123; moment(current_time).format('LLL') &#125;&#125;.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;That was &#123;&#123; moment(current_time).fromNow(refresh=True) &#125;&#125;&lt;/p&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h2 id="渲染结果"><a href="#渲染结果" class="headerlink" title="渲染结果"></a>渲染结果</h2><p><img src="https://ooo.0o0.ooo/2017/02/16/58a553bf3a68c.png" alt="下载.png"></p><h1 id="常用格式化参数"><a href="#常用格式化参数" class="headerlink" title="常用格式化参数"></a>常用格式化参数</h1><table><thead><tr><th>Input</th><th>Example</th><th>Description</th></tr></thead><tbody><tr><td><code>YYYY</code></td><td><code>2014</code></td><td>4 or 2 digit year</td></tr><tr><td><code>YY</code></td><td><code>14</code></td><td>2 digit year</td></tr><tr><td><code>Q</code></td><td><code>1..4</code></td><td>Quarter of year. Sets month to first month in quarter.</td></tr><tr><td><code>M MM</code></td><td><code>1..12</code></td><td>Month number</td></tr><tr><td><code>MMM MMMM</code></td><td><code>Jan..December</code></td><td>Month name in locale set by <code>moment.locale()</code></td></tr><tr><td><code>D DD</code></td><td><code>1..31</code></td><td>Day of month</td></tr><tr><td><code>Do</code></td><td><code>1st..31st</code></td><td>Day of month with ordinal</td></tr><tr><td><code>DDD DDDD</code></td><td><code>1..365</code></td><td>Day of year</td></tr><tr><td><code>X</code></td><td><code>1410715640.579</code></td><td>Unix timestamp</td></tr><tr><td><code>x</code></td><td><code>1410715640579</code></td><td>Unix ms timestamp</td></tr></tbody></table>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Flask </tag>
            
            <tag> 扩展 </tag>
            
            <tag> moment.js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux命令——tar</title>
      <link href="/2017/02/13/linux%E5%91%BD%E4%BB%A4%E2%80%94%E2%80%94tar/"/>
      <url>/2017/02/13/linux%E5%91%BD%E4%BB%A4%E2%80%94%E2%80%94tar/</url>
      <content type="html"><![CDATA[<p>首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件。当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（gzip bzip2命令）。</p><a id="more"></a><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar [必要参数] [可选参数] [文件]</span><br></pre></td></tr></table></figure><h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><h2 id="必要参数"><a href="#必要参数" class="headerlink" title="必要参数"></a>必要参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-A 新增压缩文件到已存在的压缩</span><br><span class="line">-B 设置区块大小</span><br><span class="line">-c 建立新的压缩文件</span><br><span class="line">-d 记录文件的差别</span><br><span class="line">-r 添加文件到已经压缩的文件</span><br><span class="line">-u 添加改变了和现有的文件到已经存在的压缩文件</span><br><span class="line">-x 从压缩的文件中提取文件</span><br><span class="line">-t 显示压缩文件的内容</span><br><span class="line">-z 支持gzip解压文件</span><br><span class="line">-j 支持bzip2解压文件</span><br><span class="line">-Z 支持compress解压文件</span><br><span class="line">-v 显示操作过程</span><br><span class="line">-l 文件系统边界设置</span><br><span class="line">-k 保留原有文件不覆盖</span><br><span class="line">-m 保留文件不被覆盖</span><br><span class="line">-W 确认压缩文件的正确性</span><br></pre></td></tr></table></figure><h2 id="可选参数"><a href="#可选参数" class="headerlink" title="可选参数"></a>可选参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-b 设置区块数目</span><br><span class="line">-C 切换到指定目录</span><br><span class="line">-f 指定压缩文件</span><br><span class="line">--<span class="built_in">help</span> 显示帮助信息</span><br><span class="line">--version 显示版本信息</span><br></pre></td></tr></table></figure><h1 id="常见压缩-解压缩例子"><a href="#常见压缩-解压缩例子" class="headerlink" title="常见压缩/解压缩例子"></a>常见压缩/解压缩例子</h1><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解包：tar xvf FileName.tar</span><br><span class="line">打包：tar cvf FileName.tar DirName</span><br></pre></td></tr></table></figure><h2 id="gz"><a href="#gz" class="headerlink" title="gz"></a>gz</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解压：tar zxvf FileName.tar.gz</span><br><span class="line">压缩：tar zcvf FileName.tar.gz DirName</span><br></pre></td></tr></table></figure><h2 id="bz2"><a href="#bz2" class="headerlink" title="bz2"></a>bz2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解压：tar jxvf FileName.tar.bz2</span><br><span class="line">压缩：tar jcvf FileName.tar.bz2 DirName</span><br></pre></td></tr></table></figure><h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解压：unzip FileName.zip</span><br><span class="line">压缩：zip FileName.zip DirName</span><br></pre></td></tr></table></figure><h1 id="常见实例"><a href="#常见实例" class="headerlink" title="常见实例"></a>常见实例</h1><h2 id="将文件全部打包成tar包"><a href="#将文件全部打包成tar包" class="headerlink" title="将文件全部打包成tar包"></a>将文件全部打包成tar包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf log.tar log2012.log</span><br><span class="line">tar -zcvf log.tar.gz log2012.log</span><br><span class="line">tar -jcvf log.tar.bz2 log2012.log</span><br></pre></td></tr></table></figure><h2 id="查阅tar包内文件"><a href="#查阅tar包内文件" class="headerlink" title="查阅tar包内文件"></a>查阅tar包内文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -ztvf log.tar.gz</span><br></pre></td></tr></table></figure><h2 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf log.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> tar </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pip升级所有包</title>
      <link href="/2017/02/03/pip%E5%8D%87%E7%BA%A7%E6%89%80%E6%9C%89%E5%8C%85/"/>
      <url>/2017/02/03/pip%E5%8D%87%E7%BA%A7%E6%89%80%E6%9C%89%E5%8C%85/</url>
      <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list --outdated | cut -d<span class="string">' '</span> -f1 | xargs pip install --upgrade</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pip </tag>
            
            <tag> upgrade </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Kcptun配置</title>
      <link href="/2017/01/27/Kcptun%E9%85%8D%E7%BD%AE/"/>
      <url>/2017/01/27/Kcptun%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>以Ubuntu-16.04-x86_64为例。</p><a id="more"></a><h1 id="server端配置"><a href="#server端配置" class="headerlink" title="server端配置"></a>server端配置</h1><p>到<a href="https://github.com/xtaci/kcptun/releases" target="_blank" rel="noopener">https://github.com/xtaci/kcptun/releases</a>下载对应的版本（<a href="https://github.com/xtaci/kcptun/releases/download/v20170120/kcptun-linux-amd64-20170120.tar.gz" target="_blank" rel="noopener"><strong>kcptun-linux-amd64-20170120.tar.gz</strong></a>）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /root/kcptun</span><br><span class="line"><span class="built_in">cd</span> /root/kcptun</span><br><span class="line">wget https://github.com/xtaci/kcptun/releases/download/v20170120/kcptun-linux-amd64-20170120.tar.gz</span><br><span class="line">tar -zxf kcptun-linux-amd64-*.tar.gz</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /bin/bash /bin/sh</span><br></pre></td></tr></table></figure><p>创建<code>start.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /root/kcptun/start.sh</span><br></pre></td></tr></table></figure><p>写入以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> /root/kcptun/</span><br><span class="line">./server_linux_amd64 -c /root/kcptun/server-config.json &gt; kcptun.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Kcptun started."</span></span><br></pre></td></tr></table></figure><p>创建配置文件<code>server-config.json</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /root/kcptun/server-config.json</span><br></pre></td></tr></table></figure><p>写入以下内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"listen"</span>: <span class="string">":29900"</span>,</span><br><span class="line">    <span class="attr">"target"</span>: <span class="string">"your_vps_ip_address:your_shadowsocks_server_port"</span>,</span><br><span class="line">    <span class="attr">"key"</span>: <span class="string">"test"</span>,</span><br><span class="line">    <span class="attr">"crypt"</span>: <span class="string">"salsa20"</span>,</span><br><span class="line">    <span class="attr">"mode"</span>: <span class="string">"fast2"</span>,</span><br><span class="line">    <span class="attr">"mtu"</span>: <span class="number">1350</span>,</span><br><span class="line">    <span class="attr">"sndwnd"</span>: <span class="number">1024</span>,</span><br><span class="line">    <span class="attr">"rcvwnd"</span>: <span class="number">1024</span>,</span><br><span class="line">    <span class="attr">"datashard"</span>: <span class="number">70</span>,</span><br><span class="line">    <span class="attr">"parityshard"</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="attr">"dscp"</span>: <span class="number">46</span>,</span><br><span class="line">    <span class="attr">"nocomp"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"acknodelay"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"nodelay"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"interval"</span>: <span class="number">40</span>,</span><br><span class="line">    <span class="attr">"resend"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"nc"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"sockbuf"</span>: <span class="number">4194304</span>,</span><br><span class="line">    <span class="attr">"keepalive"</span>: <span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建<code>stop.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /root/kcptun/stop.sh</span><br></pre></td></tr></table></figure><p>写入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Stopping Kcptun..."</span></span><br><span class="line">PID=`ps -ef | grep server_linux_amd64 | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">""</span> !=  <span class="string">"<span class="variable">$PID</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"killing <span class="variable">$PID</span>"</span></span><br><span class="line">  <span class="built_in">kill</span> -9 <span class="variable">$PID</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Kcptun stoped."</span></span><br></pre></td></tr></table></figure><p>创建<code>restart.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> /root/kcptun/</span><br><span class="line">sh stop.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Restarting Kcptun..."</span></span><br><span class="line">sh start.sh</span><br></pre></td></tr></table></figure><p>启动服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /root/kcptun/start.sh</span><br></pre></td></tr></table></figure><p>停止服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /root/kcptun/stop.sh</span><br></pre></td></tr></table></figure><p>重启服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /root/kcptun/restart.sh</span><br></pre></td></tr></table></figure><p>添加开机启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/rc.local;<span class="built_in">echo</span> <span class="string">"sh /root/kcptun/start.sh"</span> &gt;&gt; /etc/rc.local</span><br></pre></td></tr></table></figure><p>查看日志信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail /root/kcptun/kcptun.log</span><br></pre></td></tr></table></figure><h1 id="client端配置"><a href="#client端配置" class="headerlink" title="client端配置"></a>client端配置</h1><p>到<a href="https://github.com/xtaci/kcptun/releases" target="_blank" rel="noopener">https://github.com/xtaci/kcptun/releases</a>下载对应的版本（<a href="https://github.com/xtaci/kcptun/releases/download/v20170120/kcptun-windows-amd64-20170120.tar.gz" target="_blank" rel="noopener">kcptun-windows-amd64-20170120.tar.gz</a>）。</p><p>将<code>kcptun-windows-amd64-*.tar.gz</code>解压</p><p>在相同文件夹下，新建<code>run.vbs</code></p><p>写入以下内容：</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> RunKcptun</span><br><span class="line"><span class="keyword">Set</span> fso = <span class="built_in">CreateObject</span>(<span class="string">"Scripting.FileSystemObject"</span>)</span><br><span class="line"><span class="keyword">Set</span> WshShell = WScript.<span class="built_in">CreateObject</span>(<span class="string">"WScript.Shell"</span>)</span><br><span class="line"><span class="comment">'获取文件路径</span></span><br><span class="line">currentPath = fso.GetFile(Wscript.ScriptFullName).ParentFolder.Path &amp; <span class="string">"\"</span></span><br><span class="line"><span class="string">'配置文件路径</span></span><br><span class="line"><span class="string">configFile = currentPath &amp; "</span>client-config.json<span class="string">"</span></span><br><span class="line"><span class="string">'日志文件</span></span><br><span class="line"><span class="string">logFile = currentPath &amp; "</span>kcptun.<span class="built_in">log</span><span class="string">"</span></span><br><span class="line"><span class="string">'软件运行参数</span></span><br><span class="line"><span class="string">exeConfig = currentPath &amp; "</span>client_windows_amd64.exe -c <span class="string">" &amp; configFile</span></span><br><span class="line"><span class="string">'拼接命令行</span></span><br><span class="line"><span class="string">cmdLine = "</span>cmd /c <span class="string">" &amp; exeConfig &amp; "</span> &gt; <span class="string">" &amp; logFile &amp; "</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span><span class="string">"</span></span><br><span class="line"><span class="string">'启动软件</span></span><br><span class="line"><span class="string">WshShell.Run cmdLine, 0, False</span></span><br><span class="line"><span class="string">'等待1秒</span></span><br><span class="line"><span class="string">'WScript.Sleep 1000</span></span><br><span class="line"><span class="string">'打印运行命令</span></span><br><span class="line"><span class="string">'Wscript.echo cmdLine</span></span><br><span class="line"><span class="string">Set WshShell = Nothing</span></span><br><span class="line"><span class="string">Set fso = Nothing</span></span><br><span class="line"><span class="string">'退出脚本</span></span><br><span class="line"><span class="string">WScript.quit</span></span><br></pre></td></tr></table></figure><p>新建<code>client-config.json</code>，写入以下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"localaddr"</span>: <span class="string">":12948"</span>,</span><br><span class="line">    <span class="attr">"remoteaddr"</span>: <span class="string">"your_vps_ip_address:29900"</span>,</span><br><span class="line">    <span class="attr">"key"</span>: <span class="string">"test"</span>,</span><br><span class="line">    <span class="attr">"crypt"</span>: <span class="string">"salsa20"</span>,</span><br><span class="line">    <span class="attr">"mode"</span>: <span class="string">"fast2"</span>,</span><br><span class="line">    <span class="attr">"conn"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"autoexpire"</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">"mtu"</span>: <span class="number">1350</span>,</span><br><span class="line">    <span class="attr">"sndwnd"</span>: <span class="number">128</span>,</span><br><span class="line">    <span class="attr">"rcvwnd"</span>: <span class="number">1024</span>,</span><br><span class="line">    <span class="attr">"datashard"</span>: <span class="number">70</span>,</span><br><span class="line">    <span class="attr">"parityshard"</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="attr">"dscp"</span>: <span class="number">46</span>,</span><br><span class="line">    <span class="attr">"nocomp"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"acknodelay"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"nodelay"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"interval"</span>: <span class="number">40</span>,</span><br><span class="line">    <span class="attr">"resend"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"nc"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"sockbuf"</span>: <span class="number">4194304</span>,</span><br><span class="line">    <span class="attr">"keepalive"</span>: <span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建<code>stop.bat</code>，写入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill /f /im client_windows_amd64.exe</span><br></pre></td></tr></table></figure><p>新建<code>startUp.bat</code>，写入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">title Kcptun 开机启动设置</span><br><span class="line">mode con cols=50 lines=20</span><br><span class="line">color A</span><br><span class="line">echo.</span><br><span class="line">echo.                Kcptun 启动项设置</span><br><span class="line">echo.</span><br><span class="line">echo.     此批处理可以将 Kcptun 客户端添加到开机启动</span><br><span class="line">echo.</span><br><span class="line">echo.       请将该文件放到 run.vbs 相同目录后运行</span><br><span class="line">echo.</span><br><span class="line">echo.</span><br><span class="line">set /p ST=输入 y 添加开机启动，输入 n 取消开机启动：</span><br><span class="line">if /I &quot;%ST%&quot;==&quot;y&quot; goto addStartup</span><br><span class="line">if /I &quot;%ST%&quot;==&quot;n&quot; goto delStartup</span><br><span class="line">:addStartup</span><br><span class="line">reg add &quot;HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot; /v &quot;Kcptun Client&quot; /t REG_SZ /d &quot;\&quot;%~dp0run.vbs\&quot;&quot; /F&gt;NUL</span><br><span class="line">exit</span><br><span class="line">:delStartup</span><br><span class="line">reg delete &quot;HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot; /v &quot;kcptun Client&quot; /F&gt;NUL 2&gt;NUL</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>运行程序使用<code>run.vbs</code>，停止程序使用<code>stop.bat</code>，查看日志信息使用<code>kcptun.log</code>。</p><h1 id="shadowsocks配置"><a href="#shadowsocks配置" class="headerlink" title="shadowsocks配置"></a>shadowsocks配置</h1><p>在客户端中新建服务器：</p><ul><li>服务器IP填写：127.0.0.1</li><li>服务器端口填写：12948</li></ul><p>其余部分正确填写。</p><h1 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h1><p><img src="https://ooo.0o0.ooo/2017/01/27/588af723cb09f.png" alt="2017-01-27.png"></p>]]></content>
      
      
        <tags>
            
            <tag> Kcptun </tag>
            
            <tag> Shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在powershell中校验文件Hash</title>
      <link href="/2016/12/03/%E5%9C%A8powershell%E4%B8%AD%E6%A0%A1%E9%AA%8C%E6%96%87%E4%BB%B6Hash/"/>
      <url>/2016/12/03/%E5%9C%A8powershell%E4%B8%AD%E6%A0%A1%E9%AA%8C%E6%96%87%E4%BB%B6Hash/</url>
      <content type="html"><![CDATA[<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Get-FileHash [-Path <span class="string">"文件路径"</span>] [-Algorithm 算法]</span><br></pre></td></tr></table></figure><h1 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h1><h2 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h2><ul><li>SHA1</li><li>SHA256</li><li>SHA384</li><li>SHA512</li><li>MACTripleDES</li><li>MD5</li><li>RIPEMD160</li></ul><p>🌏: <a href="https://msdn.microsoft.com/en-us/powershell/reference/5.1/microsoft.powershell.utility/get-filehash" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/powershell/reference/5.1/microsoft.powershell.utility/get-filehash</a></p>]]></content>
      
      
        <tags>
            
            <tag> powershell </tag>
            
            <tag> hash </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>scrapy安装的坑</title>
      <link href="/2016/11/15/scrapy%E5%AE%89%E8%A3%85%E7%9A%84%E5%9D%91/"/>
      <url>/2016/11/15/scrapy%E5%AE%89%E8%A3%85%E7%9A%84%E5%9D%91/</url>
      <content type="html"><![CDATA[<h1 id="Microsoft-Visual-C-14-0-required"><a href="#Microsoft-Visual-C-14-0-required" class="headerlink" title="Microsoft Visual C++ 14.0 required"></a>Microsoft Visual C++ 14.0 required</h1><p>到<a href="http://landinghub.visualstudio.com/visual-cpp-build-tools" target="_blank" rel="noopener">visualstudio.com</a>下载Visual C++ Build Tools 2015，勾选<code>ATL/MFC SDK</code>。</p><p><img src="https://ooo.0o0.ooo/2016/11/15/582ac78757f9a.png" alt=""></p><h1 id="pip无法安装lxml"><a href="#pip无法安装lxml" class="headerlink" title="pip无法安装lxml"></a>pip无法安装lxml</h1><p>到<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml" target="_blank" rel="noopener">lfd.uci.edu</a>下载对应的<code>lxml*.whl</code>，使用<code>pip install lxml*.whl</code>安装</p><h1 id="No-module-named-win32api"><a href="#No-module-named-win32api" class="headerlink" title="No module named win32api"></a>No module named win32api</h1><p>运行<code>scrapy crawl</code>命令时，会出现此问题</p><p><img src="https://ooo.0o0.ooo/2016/11/15/582ac7872e817.png" alt=""></p><p>到<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">lfd.uci.edu</a>下载对应的<code>pywin32*.whl</code>安装</p><p>再进入<code>C:\Users\Li\AppData\Local\Programs\Python\Python36\Scripts</code>目录，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python pywin32_postinstall.py -install</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> scrapy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Windows中删除路径太长目录及文件</title>
      <link href="/2016/09/10/Windows%E4%B8%AD%E5%88%A0%E9%99%A4%E8%B7%AF%E5%BE%84%E5%A4%AA%E9%95%BF%E7%9B%AE%E5%BD%95%E5%8F%8A%E6%96%87%E4%BB%B6/"/>
      <url>/2016/09/10/Windows%E4%B8%AD%E5%88%A0%E9%99%A4%E8%B7%AF%E5%BE%84%E5%A4%AA%E9%95%BF%E7%9B%AE%E5%BD%95%E5%8F%8A%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<p>当前目录下shift+鼠标右键<code>在此处打开命令窗口</code></p><p><code>robocopy empty_dir will_delete_dir /purge</code></p><ul><li>empty_dir 新建的空白目录</li><li>will_delete_dir 要删除的目录</li><li>注意中间的空格</li></ul><blockquote><p><strong>注意此方法将删除目标路径下所有文件，慎用！！！</strong></p></blockquote>]]></content>
      
      
        <tags>
            
            <tag> 路径太长 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用shadowsocks代理UWP应用</title>
      <link href="/2016/09/01/%E4%BD%BF%E7%94%A8shadowsocks%E4%BB%A3%E7%90%86UWP%E5%BA%94%E7%94%A8/"/>
      <url>/2016/09/01/%E4%BD%BF%E7%94%A8shadowsocks%E4%BB%A3%E7%90%86UWP%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>UWP的应用容器设置有AppContainer Loopback，不允许发送网络请求给本地服务器。</p><p>可以使用<a href="https://www.fiddler2.com/dl/EnableLoopbackUtility.exe" target="_blank" rel="noopener">Enable AppContainer Loopback</a>使UWP应用绕过Loopback。</p><p><img src="https://ooo.0o0.ooo/2016/11/15/582acdc60997f.png" alt=""></p><p>点击<code>Exempt All</code>，再点击<code>Save Changes</code>，就可以使所有的UWP应用能够被shadowsocks代理。</p>]]></content>
      
      
        <tags>
            
            <tag> Shadowsocks </tag>
            
            <tag> UWP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VPS上部署Shadowsocks &amp; 锐速</title>
      <link href="/2016/01/11/VPS%E4%B8%8A%E9%83%A8%E7%BD%B2Shadowsocks-%E9%94%90%E9%80%9F/"/>
      <url>/2016/01/11/VPS%E4%B8%8A%E9%83%A8%E7%BD%B2Shadowsocks-%E9%94%90%E9%80%9F/</url>
      <content type="html"><![CDATA[<p>以Digital Ocean, Ubuntu 14.04 x64 vmlinuz-3.13.0-24-generic为例。</p><a id="more"></a><h1 id="配置Shadowsocks-Server"><a href="#配置Shadowsocks-Server" class="headerlink" title="配置Shadowsocks Server"></a>配置Shadowsocks Server</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>Shadowsocks, a secure socks5 proxy, designed to protect your Internet traffic.</p></blockquote><p>到<a href="https://shadowsocks.org/en/download/servers.html" target="_blank" rel="noopener">shadowsocks.org</a>选择合适版本的Shadowsocks安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>创建<code>/etc/shadowsocks.json</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure></p><p>填写<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"my_server_ip"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">8388</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"my_password"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">600</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建脚本<code>/etc/init.d/shadowsocks</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/init.d/shadowsocks</span><br></pre></td></tr></table></figure></p><p>填写<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()&#123;</span><br><span class="line">       ssserver -c /etc/shadowsocks.json -d start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>()&#123;</span><br><span class="line">        ssserver -c /etc/shadowsocks.json -d stop</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">reload)</span><br><span class="line">        stop</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">*)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|reload|stop&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p><p>增加可执行权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/init.d/shadowsocks</span><br></pre></td></tr></table></figure></p><p>创建文件<code>/etc/init/shadowsocks.conf</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">start on (runlevel [2345])</span><br><span class="line">stop on (runlevel [016])</span><br><span class="line"></span><br><span class="line">pre-start script</span><br><span class="line">/etc/init.d/shadowsocks start</span><br><span class="line">end script</span><br><span class="line"></span><br><span class="line">post-stop script</span><br><span class="line">/etc/init.d/shadowsocks stop</span><br><span class="line">end script</span><br></pre></td></tr></table></figure></p><p>执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-rc.d shadowsocks defaults</span><br></pre></td></tr></table></figure></p><p>至此，可以使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service shadowsocks &#123;start|reload|stop&#125;</span><br></pre></td></tr></table></figure></p><p>来控制shadowsocks服务</p><h1 id="配置锐速"><a href="#配置锐速" class="headerlink" title="配置锐速"></a><del>配置锐速</del></h1><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a><del>注册</del></h2><p><del>&gt;<a href="http://www.serverspeeder.com/" target="_blank" rel="noopener">锐速</a>，专业的TCP加速器，显著提升带宽吞吐量，充分利用服务器带宽。</del></p><h2 id="切换内核"><a href="#切换内核" class="headerlink" title="*切换内核"></a>*<del>切换内核</del></h2><p><del>锐速现在支持的Linux内核有限，查询<a href="http://my.serverspeeder.com/ls.do?m=availables" target="_blank" rel="noopener">支持列表</a>。</del></p><p><del>Digital Ocean切换内核方法：</del></p><p><del>打开Droplet控制台，关闭VPS</del><br><img src="https://ooo.0o0.ooo/2016/11/15/582ac88145d01.png" alt=""></p><p><del>点击<code>Settings-&gt;Kernel</code>，选择一个锐速支持的内核，如Ubuntu 14.04 x64 vmlinuz-3.13.0-24-generic。</del></p><p><code>~~Power On~~</code></p><p><del>重新连接VPS，查看内核版本</del><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure></p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a><del>安装</del></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://my.serverspeeder.com/d/ls/serverSpeederInstaller.tar.gz</span><br><span class="line">tar xzvf serverSpeederInstaller.tar.gz</span><br><span class="line">bash serverSpeederInstaller.sh</span><br></pre></td></tr></table></figure><p><del>输入在锐速官网注册的邮箱和密码，一路默认选项。</del></p><p><del>重启Shadowsocks</del><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service shadowsocks reload</span><br></pre></td></tr></table></figure></p><h1 id="配置Shadowsocks-Client"><a href="#配置Shadowsocks-Client" class="headerlink" title="配置Shadowsocks Client"></a>配置Shadowsocks Client</h1><h2 id="PC"><a href="#PC" class="headerlink" title="PC"></a>PC</h2><p><a href="https://shadowsocks.org/en/download/clients.html" target="_blank" rel="noopener">shadowsocks.org</a>下载对应版本客户端。</p><p>按照实际情况填写服务器IP、端口号以及密码。<br><img src="https://ooo.0o0.ooo/2016/11/15/582ac880ed8e0.png" alt=""></p><p>启用系统代理</p><p>可以上油管愉快地玩耍了。<br><img src="https://ooo.0o0.ooo/2016/11/16/582bcd75de31a.png" alt=""></p><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p><a href="http://apps.evozi.com/apk-downloader/" target="_blank" rel="noopener">APK Downloader</a>是一个在线下载<a href="https://play.google.com/store" target="_blank" rel="noopener">Google Play</a>中应用的网站。</p><p>输入<code>com.github.shadowsocks</code>，点击<code>Generate Download Link</code>下载APK<br><img src="https://ooo.0o0.ooo/2016/11/15/582ac8811bdbf.png" alt=""></p><p>安装完成后，基本配置和PC端类似<br><img src="https://ooo.0o0.ooo/2016/11/15/582ac88144608.png" alt=""></p>]]></content>
      
      
        <tags>
            
            <tag> Shadowsocks </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>查看占用端口的进程并终止</title>
      <link href="/2015/07/22/%E6%9F%A5%E7%9C%8B%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%B9%B6%E7%BB%88%E6%AD%A2/"/>
      <url>/2015/07/22/%E6%9F%A5%E7%9C%8B%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%B9%B6%E7%BB%88%E6%AD%A2/</url>
      <content type="html"><![CDATA[<p>在使用Tomcat的过程中总有端口被占用的情况，此时需要找到占用端口的进程并杀掉</p><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="查看所有的端口占用情况"><a href="#查看所有的端口占用情况" class="headerlink" title="查看所有的端口占用情况"></a>查看所有的端口占用情况</h2><pre><code>netstat -ano</code></pre><p>会返回：</p><p>协议    本地地址    外部地址    状态    PID</p><h2 id="查看指定的端口占用情况"><a href="#查看指定的端口占用情况" class="headerlink" title="查看指定的端口占用情况"></a>查看指定的端口占用情况</h2><pre><code>netstat -ano|findstr &quot;端口号&quot;</code></pre><p>会返回：</p><p>协议    本地地址    外部地址    状态    PID</p><h2 id="查看PID对应的进程"><a href="#查看PID对应的进程" class="headerlink" title="查看PID对应的进程"></a>查看PID对应的进程</h2><pre><code>tasklist|findstr &quot;PID&quot;</code></pre><p>会返回：</p><p>映像名称    PID    会话名    会话#    内存使用</p><h2 id="杀死该进程"><a href="#杀死该进程" class="headerlink" title="杀死该进程"></a>杀死该进程</h2><pre><code>taskkill /T /F /PID PID</code></pre><hr><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="查看端口（如8080端口）"><a href="#查看端口（如8080端口）" class="headerlink" title="查看端口（如8080端口）"></a>查看端口（如8080端口）</h2><pre><code>netstat -lnp|grep 8080</code></pre><p>会返回：</p><p>tcp6    0    0    :::8080    :::*    LISTEN    5263/java</p><h2 id="杀死占用端口的进程"><a href="#杀死占用端口的进程" class="headerlink" title="杀死占用端口的进程"></a>杀死占用端口的进程</h2><pre><code>kill -9 5263</code></pre>]]></content>
      
      
        <tags>
            
            <tag> 端口 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IntelliJ IDEA14集成Tomcat</title>
      <link href="/2015/07/22/IntelliJ-IDEA-14%E9%9B%86%E6%88%90Tomcat/"/>
      <url>/2015/07/22/IntelliJ-IDEA-14%E9%9B%86%E6%88%90Tomcat/</url>
      <content type="html"><![CDATA[<p>在IntelliJ IDEA 14中集成Tomcat</p><a id="more"></a><h1 id="Tomcat安装"><a href="#Tomcat安装" class="headerlink" title="Tomcat安装"></a>Tomcat安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="http://tomcat.apache.org/" target="_blank" rel="noopener">Tomcat官网</a></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在环境变量里先配置好JAVA_HOME<br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa38fc28.png" alt=""></p><p>再配置CATALINA_HOME（Tomcat原名Catalina）<br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa37f21c.png" alt=""></p><p>运行bin目录下的 <code>startup.bat</code><br><img src="https://ooo.0o0.ooo/2016/11/15/582acc102c601.png" alt=""></p><p>在浏览器中输入 <code>localhost:8080</code> ，若成功，应见到如下界面<br><img src="https://ooo.0o0.ooo/2016/11/15/582acc10afa82.png" alt=""></p><hr><h1 id="IntelliJ-IDEA的配置"><a href="#IntelliJ-IDEA的配置" class="headerlink" title="IntelliJ IDEA的配置"></a>IntelliJ IDEA的配置</h1><h2 id="创建Java-Web项目"><a href="#创建Java-Web项目" class="headerlink" title="创建Java Web项目"></a>创建Java Web项目</h2><p><code>File —&gt; New —&gt; Project</code> 新建一个名为JavaWeb的项目<br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa435738.png" alt=""></p><p>在 <code>WEB-INF</code> 目录下 <code>右键 —&gt; New —&gt; Directory</code> ，新建 <code>classes</code> 和 <code>lib</code> 目录<br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa3d8c4f.png" alt=""></p><p><code>File —&gt; Project Structure</code> ，打开Project Structure窗口<br> <code>Modules —&gt; JavaWeb —&gt; Paths</code> 勾选 <code>Use module compile output path</code> ，将 <code>Output path</code> 和 <code>Test output path</code> 的路径都改为刚才新建的 <code>classes</code><br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa3dee52.png" alt=""></p><p>切换到 <code>Dependencies</code> 选项卡，点击 <font color="#00FF00">+</font> ，选择 <code>2 Library...</code> 添加Tomcat<br><img src="https://ooo.0o0.ooo/2016/11/15/582acc1025dce.png" alt=""></p><p>再次点击 <font color="#00FF00">+</font> ，选择<code>1 JARs or directories...</code> ，选择刚刚新建的 <code>lib</code> 目录<br><img src="https://ooo.0o0.ooo/2016/11/15/582acc101f4b6.png" alt=""></p><p>选择 <code>Jar Directory</code><br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa3bba04.png" alt=""></p><p>点击 <code>Artifacts</code> 选项卡</p><p>勾选 <code>Build on make</code> ，表示编译的时候就打包部署</p><p>勾选 <code>Show content of elements</code> ，表示显示详细的内容列表。<br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa3a50f7.png" alt=""></p><h2 id="配置Tomcat"><a href="#配置Tomcat" class="headerlink" title="配置Tomcat"></a>配置Tomcat</h2><p>点击 <code>Run—&gt;Edit Configurations</code> ，进入 <code>Run Configurations</code> 窗口</p><p>点击 <font color="#00FF00">+</font> ，选择 <code>Tomcat Server —&gt; Local</code> ，创建一个新的Tomcat容器<br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa45e1dd.png" alt=""></p><p>在 <code>Name</code> 处输入新的服务名</p><p>在  <code>Server</code> 选项卡中，去掉勾选 <code>After launch</code> ，设置 <code>HTTP port</code> 和 <code>JMX port</code> ，点击 <code>Apply —&gt; OK</code> ，Tomcat配置完成<br><img src="https://ooo.0o0.ooo/2016/11/15/582acc0f89f66.png" alt=""></p><h2 id="在Tomcat中部署并运行项目"><a href="#在Tomcat中部署并运行项目" class="headerlink" title="在Tomcat中部署并运行项目"></a>在Tomcat中部署并运行项目</h2><p>点击 <code>Run —&gt; Edit Configurations</code> 进入 <code>Run/Debug Configurations</code> 窗口，选择之前配置好的Tomcat，点击 <code>Deployment</code> 选项卡，修改 <code>Application context</code><br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa3203f0.png" alt=""></p><p>修改 <code>index.jsp</code><br><img src="https://ooo.0o0.ooo/2016/11/15/582acaa3ec1b5.png" alt=""></p><p>并运行Tomcat，在浏览器中查看结果</p><p>IntelliJ IDEA快捷键：<code>Shift+F10</code>，运行Tomcat；<code>Alt+F2</code>，选择浏览器启动<br><img src="https://ooo.0o0.ooo/2016/11/15/582acc1061908.png" alt=""></p>]]></content>
      
      
        <tags>
            
            <tag> IntelliJ IDEA </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello Hexo</title>
      <link href="/2015/01/29/Hello-Hexo/"/>
      <url>/2015/01/29/Hello-Hexo/</url>
      <content type="html"><![CDATA[<p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>是台湾大学生Tommy Chen创造的基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。Hexo生成的静态网页可以直接放到<del>GitCafe Pages</del>，Coding Pages，BAE，SAE等平台上。</p><a id="more"></a><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>到<a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js官网</a>下载相应平台最新版本的Node.js，一路安装。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>Git有很多版本，我使用的是<a href="http://msysgit.github.io/" target="_blank" rel="noopener">msysGit</a>。</p><h1 id="GitCafe"><a href="#GitCafe" class="headerlink" title="GitCafé"></a><del>GitCafé</del></h1><blockquote><p><del>Git是目前世界上最流行最优秀的项目版本控制系统之一，Cafe的意思为咖啡馆，象征着程序员文化。在GitCafe这个平台上，开发者可以轻松的在线协作共同开发出一个又一个开源或者私有项目。通过GitCafe，开发项目的控制与团队管理将变得方便与有效。</del></p></blockquote><p><del>GitCafé提供Pages服务，Pages服务简单来说是通过在GitCafé上创建一个项目，在这个项目中托管静态网页文件，在指定的条件下，GitCafé会为您准备好一个<code>username.gitcafe.com</code>的二级域名用于渲染您的个人静态页面。</del></p><p><a href="http://gitcafe.com/signup?invited_by=DoubleX-Li" title="邀请链接" target="_blank" rel="noopener"><del>注册GitCafé</del></a></p><h1 id="Coding"><a href="#Coding" class="headerlink" title="Coding"></a>Coding</h1><blockquote><p>CODING （深圳市希云科技有限公司）是国内专业的一站式云端软件服务平台，成立于 2014 年 2 月。</p></blockquote><p>Coding Pages 是一个免费的静态网页托管和演示服务。您可以使用 Coding Pages 托管博客、项目官网等静态网页，还可以绑定自定义域名。</p><p><a href="https://coding.net/register?key=e8e93603-4b04-48c1-8f56-fc114a265296" title="邀请链接" target="_blank" rel="noopener">注册Coding</a></p><h2 id="创建page"><a href="#创建page" class="headerlink" title="创建page"></a>创建page</h2><p>创建一个与用户名<strong>相同名称</strong>的项目<br><img src="https://ooo.0o0.ooo/2016/11/15/582acd1ed867b.png" alt=""></p><h2 id="SSH添加"><a href="#SSH添加" class="headerlink" title="SSH添加"></a>SSH添加</h2><p>打开安装好的GitBash<br>首先设置你的用户名和邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">"&#123;Email&#125;"</span></span><br><span class="line">git config --global user.name <span class="string">"&#123;UserName&#125;"</span></span><br></pre></td></tr></table></figure><p>创建.ssh目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.ssh</span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure></p><p>生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br><span class="line"><span class="comment"># 用私人邮箱创建一个密钥</span></span><br><span class="line"><span class="comment"># Generating public/private rsa key pair.</span></span><br><span class="line"><span class="comment"># Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]</span></span><br></pre></td></tr></table></figure><p>输入密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): [Type a passphrase]</span><br><span class="line"><span class="comment">#Enter same passphrase again: [Type passphrase again]</span></span><br></pre></td></tr></table></figure><p>最后你会得到类似下面的结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/you/.ssh/id_rsa.</span><br><span class="line"><span class="comment"># Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.</span></span><br><span class="line"><span class="comment"># The key fingerprint is:</span></span><br><span class="line"><span class="comment"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span></span><br></pre></td></tr></table></figure><p>你需要把它添加到ssh-agents里去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># start the ssh-agent in the background</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></span><br><span class="line"><span class="comment"># Agent pid 59566</span></span><br><span class="line">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>然后用Notepad++之类的编辑器打开<code>~/.ssh/id_rsa.pub</code>文件把内容复制到对应位置：</p><p>GitCafé：『账户设置-&gt;SSH公钥管理-&gt;添加新的公钥』</p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>npm install -g hexo-cli</p></blockquote><p>这是Hexo官网上的安装方式，但在国内并不好用。在国内可以使用<a href="http://npm.taobao.org/" target="_blank" rel="noopener">淘宝提供的NPM镜像</a>代替官方版本。</p><p>使用说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>安装成功后使用npm时将所有<code>npm</code>替换为<code>cnpm</code>即可。即使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>完成hexo的安装</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">cnpm install</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>注意：使用Hexo时，无论是修改<code>*.yml</code>文件，还是撰写文章，在冒号后面都要留有一个英文空格！</strong></p><p>在<code>~/.ssh/blog/_config.yml</code>文件中有许多博客的配置选项。</p><p>整站的基本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: Li<span class="string">'s Blog #网站标题</span></span><br><span class="line"><span class="string">subtitle: What have you done today to make you feel proud? #网站副标题</span></span><br><span class="line"><span class="string">description: 写字的地方 #给搜索引擎看的网站描述</span></span><br><span class="line"><span class="string">author: Double X Li #作者</span></span><br><span class="line"><span class="string">email: me@doublex.li #作者邮箱</span></span><br><span class="line"><span class="string">language: zh-Hans #语言</span></span><br></pre></td></tr></table></figure><p>如果你有域名，你可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: https://blog.doublex.li <span class="comment">#你的域名</span></span><br></pre></td></tr></table></figure><p>日期/时间格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">date_format: LLL</span><br><span class="line">time_format: HH:mm:ss</span><br></pre></td></tr></table></figure><p>每个人的习惯不一样，你可以参照<a href="http://momentjs.com/" target="_blank" rel="noopener">Moment.js文档</a>选择自己的格式，注意先到下方选择国家。</p><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"Hello Hexo"</span> <span class="comment">#可简化为 hexo n "Hello Hexo"</span></span><br></pre></td></tr></table></figure><p>此时，在<code>~/.ssh/blog/source/_posts</code>目录下产生<code>title.md</code>的MarkDown文件，可用<a href="http://markdownpad.com/" target="_blank" rel="noopener">MarkdownPad</a>之类的Markdown编辑器进行编辑，<a href="http://wowubuntu.com/markdown/" title="点击查看Markdown语法" target="_blank" rel="noopener">Markdown</a>是一种优秀的互联网内容书写语言。</p><center><br>举个栗子<br><br><img src="https://ooo.0o0.ooo/2016/11/15/582acd1e1ed7a.jpg" alt=""><br></center><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">title: 文章标题</span><br><span class="line">date: 发布时间</span><br><span class="line">tags: 标签</span><br><span class="line">- tag1</span><br><span class="line">- tag2</span><br><span class="line">- ...</span><br><span class="line">---</span><br><span class="line">文章摘要</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">正文</span><br></pre></td></tr></table></figure><h2 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h2><p>在<code>~/.ssh/blog</code>目录下，生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate <span class="comment">#可简化为 hexo g</span></span><br></pre></td></tr></table></figure><h2 id="启动本地服务"><a href="#启动本地服务" class="headerlink" title="启动本地服务"></a>启动本地服务</h2><p>然后启动本地服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server <span class="comment">#可简化为 hexo s</span></span><br></pre></td></tr></table></figure><p>这样，你的Hexo就在本地部署好了，在浏览器中输入<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>就可以看到效果。</p><h1 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h1><h2 id="安装deployer"><a href="#安装deployer" class="headerlink" title="安装deployer"></a>安装deployer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="设置deploy"><a href="#设置deploy" class="headerlink" title="设置deploy"></a>设置deploy</h2><p>打开<code>~/.ssh/blog/_config.yml</code>，在最下方修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@git.coding.net:username/username.git</span><br><span class="line">  branch: coding-pages</span><br><span class="line">  message:</span><br></pre></td></tr></table></figure><p>请将<code>username</code>全部替换为你的Coding用户名，设置后写好了文章只需<code>hexo deploy -generate</code>，可简化为<code>hexo d -g</code>，文章便会发表到Coding Pages上。</p><h1 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h1><p>更多Hexo使用方法请参阅<a href="http://hexo.io/docs/" target="_blank" rel="noopener">Hexo官方文档</a>。</p>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
